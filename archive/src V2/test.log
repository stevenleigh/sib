2014-02-09 21:17:20,729 | 8460 | MainProcess | DEBUG | test | <module> | testing started
2014-02-09 21:17:20,732 | 8460 | MainProcess | DEBUG | test | <module> | Testing initializing a file blob
2014-02-09 21:17:20,732 | 8460 | MainProcess | DEBUG | test | <module> | Testing a simple file delta
2014-02-09 21:17:20,733 | 8460 | MainProcess | DEBUG | test | <module> | Testing storing and loading a simple file blob
2014-02-09 21:17:20,734 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["a1f7f4060ff3f7c0b7c28b4a37990a851a225e475d47da7a0d82dec5", "", [["aggregate", 0, 0, 0, 0]], ["Zmlyc3QgbGluZQphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5egp0aGlyZCBsaW5lCmZvdXJ0aApsYXN0IGxpbmU="]]]
2014-02-09 21:17:20,742 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["file", ["a1f7f4060ff3f7c0b7c28b4a37990a851a225e475d47da7a0d82dec5", "", [["aggregate", 0, 0, 0, 0]], ["Zmlyc3QgbGluZQphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5egp0aGlyZCBsaW5lCmZvdXJ0aApsYXN0IGxpbmU="]]]
2014-02-09 21:17:20,742 | 8460 | MainProcess | DEBUG | test | <module> | Testing loading a whole directory as an initial commit
2014-02-09 21:17:20,742 | 8460 | MainProcess | INFO | local_blob_manager | commit_directory | working_directory: ../resource/test_directory_1/root, storage_directory: ../resource/peer_A_storage/test_share, user_name: joe.keur, commit_msg: first commit msg, parent_commit_hash: None, other_parent_commit_hash: None
2014-02-09 21:17:20,743 | 8460 | MainProcess | INFO | tree_blob | create_tree_text | encoding directory structure into text format for path: ../resource/test_directory_1/root
2014-02-09 21:17:20,745 | 8460 | MainProcess | DEBUG | tree_blob | create_tree_text | 
/root
 /folder
  /alice.txt/e9979d3b19bbeadbc7a8e21e16af0140b53dcb839077564f056df873/340
 /empty folder

2014-02-09 21:17:20,747 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["tree", ["2c3865200369827fff15b4794b7794d7921e0686c477d32110502078", "", [["aggregate", 0, 0, 0, 0]], ["L3Jvb3QKIC9mb2xkZXIKICAvYWxpY2UudHh0L2U5OTc5ZDNiMTliYmVhZGJjN2E4ZTIxZTE2YWYwMTQwYjUzZGNiODM5MDc3NTY0ZjA1NmRmODczLzM0MAogL2VtcHR5IGZvbGRlcgo="]]]
2014-02-09 21:17:20,966 | 8460 | MainProcess | DEBUG | commit_blob | store | File string for encrypting: ["commit", ["2c3865200369827fff15b4794b7794d7921e0686c477d32110502078", null, null, "joe.keur", "70.55.44.120\n", "Mon Feb 10 02:17:20 2014", "first commit msg"]]
2014-02-09 21:17:20,970 | 8460 | MainProcess | INFO | local_blob_manager | store_file_blobs | commit_hash: aeb50f73976e943e791470b7fd3fb708d1f71ce7e61f40626a0baefa, parent_commit_hash: None, storage_directory: ../resource/peer_A_storage/test_share, working_directory: ../resource/test_directory_1/root
2014-02-09 21:17:20,971 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["commit", ["2c3865200369827fff15b4794b7794d7921e0686c477d32110502078", null, null, "joe.keur", "70.55.44.120\n", "Mon Feb 10 02:17:20 2014", "first commit msg"]]
2014-02-09 21:17:20,973 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["tree", ["2c3865200369827fff15b4794b7794d7921e0686c477d32110502078", "", [["aggregate", 0, 0, 0, 0]], ["L3Jvb3QKIC9mb2xkZXIKICAvYWxpY2UudHh0L2U5OTc5ZDNiMTliYmVhZGJjN2E4ZTIxZTE2YWYwMTQwYjUzZGNiODM5MDc3NTY0ZjA1NmRmODczLzM0MAogL2VtcHR5IGZvbGRlcgo="]]]
2014-02-09 21:17:20,976 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["e9979d3b19bbeadbc7a8e21e16af0140b53dcb839077564f056df873", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw=="]]]
2014-02-09 21:17:20,978 | 8460 | MainProcess | INFO | local_blob_manager | restore_directory | working_directory: ../resource/restore_directory_1, storage_directory: ../resource/peer_A_storage/test_share, commit_hash: aeb50f73976e943e791470b7fd3fb708d1f71ce7e61f40626a0baefa
2014-02-09 21:17:20,979 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["commit", ["2c3865200369827fff15b4794b7794d7921e0686c477d32110502078", null, null, "joe.keur", "70.55.44.120\n", "Mon Feb 10 02:17:20 2014", "first commit msg"]]
2014-02-09 21:17:20,979 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["tree", ["2c3865200369827fff15b4794b7794d7921e0686c477d32110502078", "", [["aggregate", 0, 0, 0, 0]], ["L3Jvb3QKIC9mb2xkZXIKICAvYWxpY2UudHh0L2U5OTc5ZDNiMTliYmVhZGJjN2E4ZTIxZTE2YWYwMTQwYjUzZGNiODM5MDc3NTY0ZjA1NmRmODczLzM0MAogL2VtcHR5IGZvbGRlcgo="]]]
2014-02-09 21:17:20,980 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["file", ["e9979d3b19bbeadbc7a8e21e16af0140b53dcb839077564f056df873", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw=="]]]
2014-02-09 21:17:20,980 | 8460 | MainProcess | DEBUG | test | <module> | Testing adding a second commit
2014-02-09 21:17:20,981 | 8460 | MainProcess | INFO | local_blob_manager | commit_directory | working_directory: ../resource/test_directory_2/root, storage_directory: ../resource/peer_A_storage/test_share, user_name: joe.keur, commit_msg: second commit msg, parent_commit_hash: aeb50f73976e943e791470b7fd3fb708d1f71ce7e61f40626a0baefa, other_parent_commit_hash: None
2014-02-09 21:17:20,981 | 8460 | MainProcess | INFO | tree_blob | create_tree_text | encoding directory structure into text format for path: ../resource/test_directory_2/root
2014-02-09 21:17:20,982 | 8460 | MainProcess | DEBUG | tree_blob | create_tree_text | 
/root
 /alice.txt/7d65503335e033d86221ffda3f1191a30aa22102f3cb4879ba4db266/1384
 /folder
  /alice.txt/55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1/637
 /empty folder

2014-02-09 21:17:20,982 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["tree", ["175e1b3a7e6fc50a81c0648d45226577124d5858622568a848cd41d7", "", [["aggregate", 0, 0, 0, 0]], ["L3Jvb3QKIC9hbGljZS50eHQvN2Q2NTUwMzMzNWUwMzNkODYyMjFmZmRhM2YxMTkxYTMwYWEyMjEwMmYzY2I0ODc5YmE0ZGIyNjYvMTM4NAogL2ZvbGRlcgogIC9hbGljZS50eHQvNTVlMTNhOGNlMjhhZTY0MGFjODc2YmZiYmI4MTM1MzBkZTJjZjMyNGRiMjEwODYyNDg1ZGYyYjEvNjM3CiAvZW1wdHkgZm9sZGVyCg=="]]]
2014-02-09 21:17:21,175 | 8460 | MainProcess | DEBUG | commit_blob | store | File string for encrypting: ["commit", ["175e1b3a7e6fc50a81c0648d45226577124d5858622568a848cd41d7", "aeb50f73976e943e791470b7fd3fb708d1f71ce7e61f40626a0baefa", null, "joe.keur", "70.55.44.120\n", "Mon Feb 10 02:17:21 2014", "second commit msg"]]
2014-02-09 21:17:21,179 | 8460 | MainProcess | INFO | local_blob_manager | store_file_blobs | commit_hash: 5b6617519825f35b3dec13712467602e710130626d820a8374afaae0, parent_commit_hash: aeb50f73976e943e791470b7fd3fb708d1f71ce7e61f40626a0baefa, storage_directory: ../resource/peer_A_storage/test_share, working_directory: ../resource/test_directory_2/root
2014-02-09 21:17:21,180 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["commit", ["175e1b3a7e6fc50a81c0648d45226577124d5858622568a848cd41d7", "aeb50f73976e943e791470b7fd3fb708d1f71ce7e61f40626a0baefa", null, "joe.keur", "70.55.44.120\n", "Mon Feb 10 02:17:21 2014", "second commit msg"]]
2014-02-09 21:17:21,182 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["tree", ["175e1b3a7e6fc50a81c0648d45226577124d5858622568a848cd41d7", "", [["aggregate", 0, 0, 0, 0]], ["L3Jvb3QKIC9hbGljZS50eHQvN2Q2NTUwMzMzNWUwMzNkODYyMjFmZmRhM2YxMTkxYTMwYWEyMjEwMmYzY2I0ODc5YmE0ZGIyNjYvMTM4NAogL2ZvbGRlcgogIC9hbGljZS50eHQvNTVlMTNhOGNlMjhhZTY0MGFjODc2YmZiYmI4MTM1MzBkZTJjZjMyNGRiMjEwODYyNDg1ZGYyYjEvNjM3CiAvZW1wdHkgZm9sZGVyCg=="]]]
2014-02-09 21:17:21,182 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["commit", ["2c3865200369827fff15b4794b7794d7921e0686c477d32110502078", null, null, "joe.keur", "70.55.44.120\n", "Mon Feb 10 02:17:20 2014", "first commit msg"]]
2014-02-09 21:17:21,183 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["tree", ["2c3865200369827fff15b4794b7794d7921e0686c477d32110502078", "", [["aggregate", 0, 0, 0, 0]], ["L3Jvb3QKIC9mb2xkZXIKICAvYWxpY2UudHh0L2U5OTc5ZDNiMTliYmVhZGJjN2E4ZTIxZTE2YWYwMTQwYjUzZGNiODM5MDc3NTY0ZjA1NmRmODczLzM0MAogL2VtcHR5IGZvbGRlcgo="]]]
2014-02-09 21:17:21,183 | 8460 | MainProcess | DEBUG | local_blob_manager | store_file_blobs | Found files with matching paths and names.  working: 55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1, parent: e9979d3b19bbeadbc7a8e21e16af0140b53dcb839077564f056df873
2014-02-09 21:17:21,183 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["file", ["e9979d3b19bbeadbc7a8e21e16af0140b53dcb839077564f056df873", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw=="]]]
2014-02-09 21:17:21,185 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1", "e9979d3b19bbeadbc7a8e21e16af0140b53dcb839077564f056df873", [["replace", 0, 340, 0, 637]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw0KDQpTbyBzaGUgd2FzIGNvbnNpZGVyaW5nIGluIGhlciBvd24gbWluZCAoYXMgd2VsbCBhcyBzaGUgY291bGQsIGZvciB0aGUNCmhvdCBkYXkgbWFkZSBoZXIgZmVlbCB2ZXJ5IHNsZWVweSBhbmQgc3R1cGlkKSwgd2hldGhlciB0aGUgcGxlYXN1cmUNCm9mIG1ha2luZyBhIGRhaXN5LWNoYWluIHdvdWxkIGJlIHdvcnRoIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdXAgYW5kDQpwaWNraW5nIHRoZSBkYWlzaWVzLCB3aGVuIHN1ZGRlbmx5IGEgV2hpdGUgUmFiYml0IHdpdGggcGluayBleWVzIHJhbg0KY2xvc2UgYnkgaGVyLg=="]]]
2014-02-09 21:17:21,186 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["file", ["e9979d3b19bbeadbc7a8e21e16af0140b53dcb839077564f056df873", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw=="]]]
2014-02-09 21:17:21,187 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["7d65503335e033d86221ffda3f1191a30aa22102f3cb4879ba4db266", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw0KDQpTbyBzaGUgd2FzIGNvbnNpZGVyaW5nIGluIGhlciBvd24gbWluZCAoYXMgd2VsbCBhcyBzaGUgY291bGQsIGZvciB0aGUNCmhvdCBkYXkgbWFkZSBoZXIgZmVlbCB2ZXJ5IHNsZWVweSBhbmQgc3R1cGlkKSwgd2hldGhlciB0aGUgcGxlYXN1cmUNCm9mIG1ha2luZyBhIGRhaXN5LWNoYWluIHdvdWxkIGJlIHdvcnRoIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdXAgYW5kDQpwaWNraW5nIHRoZSBkYWlzaWVzLCB3aGVuIHN1ZGRlbmx5IGEgV2hpdGUgUmFiYml0IHdpdGggcGluayBleWVzIHJhbg0KY2xvc2UgYnkgaGVyLg0KDQpUaGVyZSB3YXMgbm90aGluZyBzbyBWRVJZIHJlbWFya2FibGUgaW4gdGhhdDsgbm9yIGRpZCBBbGljZSB0aGluayBpdCBzbw0KVkVSWSBtdWNoIG91dCBvZiB0aGUgd2F5IHRvIGhlYXIgdGhlIFJhYmJpdCBzYXkgdG8gaXRzZWxmLCAnT2ggZGVhciENCk9oIGRlYXIhIEkgc2hhbGwgYmUgbGF0ZSEnICh3aGVuIHNoZSB0aG91Z2h0IGl0IG92ZXIgYWZ0ZXJ3YXJkcywgaXQNCm9jY3VycmVkIHRvIGhlciB0aGF0IHNoZSBvdWdodCB0byBoYXZlIHdvbmRlcmVkIGF0IHRoaXMsIGJ1dCBhdCB0aGUgdGltZQ0KaXQgYWxsIHNlZW1lZCBxdWl0ZSBuYXR1cmFsKTsgYnV0IHdoZW4gdGhlIFJhYmJpdCBhY3R1YWxseSBUT09LIEEgV0FUQ0gNCk9VVCBPRiBJVFMgV0FJU1RDT0FULVBPQ0tFVCwgYW5kIGxvb2tlZCBhdCBpdCwgYW5kIHRoZW4gaHVycmllZCBvbiwNCkFsaWNlIHN0YXJ0ZWQgdG8gaGVyIGZlZXQsIGZvciBpdCBmbGFzaGVkIGFjcm9zcyBoZXIgbWluZCB0aGF0IHNoZSBoYWQNCm5ldmVyIGJlZm9yZSBzZWVuIGEgcmFiYml0IHdpdGggZWl0aGVyIGEgd2Fpc3Rjb2F0LXBvY2tldCwgb3IgYSB3YXRjaA0KdG8gdGFrZSBvdXQgb2YgaXQsIGFuZCBidXJuaW5nIHdpdGggY3VyaW9zaXR5LCBzaGUgcmFuIGFjcm9zcyB0aGUgZmllbGQNCmFmdGVyIGl0LCBhbmQgZm9ydHVuYXRlbHkgd2FzIGp1c3QgaW4gdGltZSB0byBzZWUgaXQgcG9wIGRvd24gYSBsYXJnZQ0KcmFiYml0LWhvbGUgdW5kZXIgdGhlIGhlZGdlLg=="]]]
2014-02-09 21:17:21,188 | 8460 | MainProcess | INFO | local_blob_manager | restore_directory | working_directory: ../resource/restore_directory_2, storage_directory: ../resource/peer_A_storage/test_share, commit_hash: 5b6617519825f35b3dec13712467602e710130626d820a8374afaae0
2014-02-09 21:17:21,188 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["commit", ["175e1b3a7e6fc50a81c0648d45226577124d5858622568a848cd41d7", "aeb50f73976e943e791470b7fd3fb708d1f71ce7e61f40626a0baefa", null, "joe.keur", "70.55.44.120\n", "Mon Feb 10 02:17:21 2014", "second commit msg"]]
2014-02-09 21:17:21,188 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["tree", ["175e1b3a7e6fc50a81c0648d45226577124d5858622568a848cd41d7", "", [["aggregate", 0, 0, 0, 0]], ["L3Jvb3QKIC9hbGljZS50eHQvN2Q2NTUwMzMzNWUwMzNkODYyMjFmZmRhM2YxMTkxYTMwYWEyMjEwMmYzY2I0ODc5YmE0ZGIyNjYvMTM4NAogL2ZvbGRlcgogIC9hbGljZS50eHQvNTVlMTNhOGNlMjhhZTY0MGFjODc2YmZiYmI4MTM1MzBkZTJjZjMyNGRiMjEwODYyNDg1ZGYyYjEvNjM3CiAvZW1wdHkgZm9sZGVyCg=="]]]
2014-02-09 21:17:21,189 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["file", ["7d65503335e033d86221ffda3f1191a30aa22102f3cb4879ba4db266", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw0KDQpTbyBzaGUgd2FzIGNvbnNpZGVyaW5nIGluIGhlciBvd24gbWluZCAoYXMgd2VsbCBhcyBzaGUgY291bGQsIGZvciB0aGUNCmhvdCBkYXkgbWFkZSBoZXIgZmVlbCB2ZXJ5IHNsZWVweSBhbmQgc3R1cGlkKSwgd2hldGhlciB0aGUgcGxlYXN1cmUNCm9mIG1ha2luZyBhIGRhaXN5LWNoYWluIHdvdWxkIGJlIHdvcnRoIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdXAgYW5kDQpwaWNraW5nIHRoZSBkYWlzaWVzLCB3aGVuIHN1ZGRlbmx5IGEgV2hpdGUgUmFiYml0IHdpdGggcGluayBleWVzIHJhbg0KY2xvc2UgYnkgaGVyLg0KDQpUaGVyZSB3YXMgbm90aGluZyBzbyBWRVJZIHJlbWFya2FibGUgaW4gdGhhdDsgbm9yIGRpZCBBbGljZSB0aGluayBpdCBzbw0KVkVSWSBtdWNoIG91dCBvZiB0aGUgd2F5IHRvIGhlYXIgdGhlIFJhYmJpdCBzYXkgdG8gaXRzZWxmLCAnT2ggZGVhciENCk9oIGRlYXIhIEkgc2hhbGwgYmUgbGF0ZSEnICh3aGVuIHNoZSB0aG91Z2h0IGl0IG92ZXIgYWZ0ZXJ3YXJkcywgaXQNCm9jY3VycmVkIHRvIGhlciB0aGF0IHNoZSBvdWdodCB0byBoYXZlIHdvbmRlcmVkIGF0IHRoaXMsIGJ1dCBhdCB0aGUgdGltZQ0KaXQgYWxsIHNlZW1lZCBxdWl0ZSBuYXR1cmFsKTsgYnV0IHdoZW4gdGhlIFJhYmJpdCBhY3R1YWxseSBUT09LIEEgV0FUQ0gNCk9VVCBPRiBJVFMgV0FJU1RDT0FULVBPQ0tFVCwgYW5kIGxvb2tlZCBhdCBpdCwgYW5kIHRoZW4gaHVycmllZCBvbiwNCkFsaWNlIHN0YXJ0ZWQgdG8gaGVyIGZlZXQsIGZvciBpdCBmbGFzaGVkIGFjcm9zcyBoZXIgbWluZCB0aGF0IHNoZSBoYWQNCm5ldmVyIGJlZm9yZSBzZWVuIGEgcmFiYml0IHdpdGggZWl0aGVyIGEgd2Fpc3Rjb2F0LXBvY2tldCwgb3IgYSB3YXRjaA0KdG8gdGFrZSBvdXQgb2YgaXQsIGFuZCBidXJuaW5nIHdpdGggY3VyaW9zaXR5LCBzaGUgcmFuIGFjcm9zcyB0aGUgZmllbGQNCmFmdGVyIGl0LCBhbmQgZm9ydHVuYXRlbHkgd2FzIGp1c3QgaW4gdGltZSB0byBzZWUgaXQgcG9wIGRvd24gYSBsYXJnZQ0KcmFiYml0LWhvbGUgdW5kZXIgdGhlIGhlZGdlLg=="]]]
2014-02-09 21:17:21,190 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["file", ["55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1", "e9979d3b19bbeadbc7a8e21e16af0140b53dcb839077564f056df873", [["replace", 0, 340, 0, 637]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw0KDQpTbyBzaGUgd2FzIGNvbnNpZGVyaW5nIGluIGhlciBvd24gbWluZCAoYXMgd2VsbCBhcyBzaGUgY291bGQsIGZvciB0aGUNCmhvdCBkYXkgbWFkZSBoZXIgZmVlbCB2ZXJ5IHNsZWVweSBhbmQgc3R1cGlkKSwgd2hldGhlciB0aGUgcGxlYXN1cmUNCm9mIG1ha2luZyBhIGRhaXN5LWNoYWluIHdvdWxkIGJlIHdvcnRoIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdXAgYW5kDQpwaWNraW5nIHRoZSBkYWlzaWVzLCB3aGVuIHN1ZGRlbmx5IGEgV2hpdGUgUmFiYml0IHdpdGggcGluayBleWVzIHJhbg0KY2xvc2UgYnkgaGVyLg=="]]]
2014-02-09 21:17:21,190 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["file", ["e9979d3b19bbeadbc7a8e21e16af0140b53dcb839077564f056df873", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw=="]]]
2014-02-09 21:17:21,191 | 8460 | MainProcess | DEBUG | test | <module> | Testing adding a third, more challenging, commit
2014-02-09 21:17:21,191 | 8460 | MainProcess | INFO | local_blob_manager | commit_directory | working_directory: ../resource/test_directory_3/root, storage_directory: ../resource/peer_A_storage/test_share, user_name: joe.keur, commit_msg: third commit msg, parent_commit_hash: 5b6617519825f35b3dec13712467602e710130626d820a8374afaae0, other_parent_commit_hash: None
2014-02-09 21:17:21,191 | 8460 | MainProcess | INFO | tree_blob | create_tree_text | encoding directory structure into text format for path: ../resource/test_directory_3/root
2014-02-09 21:17:21,193 | 8460 | MainProcess | DEBUG | tree_blob | create_tree_text | 
/root
 /alice.txt/56c273034e2d8db8857f2a6c620e56fbd9cd0b438a8ae350e59bca68/1184
 /folder
  /alice_rename.txt/55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1/637
  /New folder
 /New folder
  /alice_rename.txt/55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1/637
 /empty folder

2014-02-09 21:17:21,193 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["tree", ["9f5062b9d7ba14ef9971cd445801d5f53619d91af2adfb1ec9ca1b16", "", [["aggregate", 0, 0, 0, 0]], ["L3Jvb3QKIC9hbGljZS50eHQvNTZjMjczMDM0ZTJkOGRiODg1N2YyYTZjNjIwZTU2ZmJkOWNkMGI0MzhhOGFlMzUwZTU5YmNhNjgvMTE4NAogL2ZvbGRlcgogIC9hbGljZV9yZW5hbWUudHh0LzU1ZTEzYThjZTI4YWU2NDBhYzg3NmJmYmJiODEzNTMwZGUyY2YzMjRkYjIxMDg2MjQ4NWRmMmIxLzYzNwogIC9OZXcgZm9sZGVyCiAvTmV3IGZvbGRlcgogIC9hbGljZV9yZW5hbWUudHh0LzU1ZTEzYThjZTI4YWU2NDBhYzg3NmJmYmJiODEzNTMwZGUyY2YzMjRkYjIxMDg2MjQ4NWRmMmIxLzYzNwogL2VtcHR5IGZvbGRlcgo="]]]
2014-02-09 21:17:21,379 | 8460 | MainProcess | DEBUG | commit_blob | store | File string for encrypting: ["commit", ["9f5062b9d7ba14ef9971cd445801d5f53619d91af2adfb1ec9ca1b16", "5b6617519825f35b3dec13712467602e710130626d820a8374afaae0", null, "joe.keur", "70.55.44.120\n", "Mon Feb 10 02:17:21 2014", "third commit msg"]]
2014-02-09 21:17:21,383 | 8460 | MainProcess | INFO | local_blob_manager | store_file_blobs | commit_hash: c087b8a3f07e6aedfa003acd6d68c5c579d49d2e5f0f3c769f341c01, parent_commit_hash: 5b6617519825f35b3dec13712467602e710130626d820a8374afaae0, storage_directory: ../resource/peer_A_storage/test_share, working_directory: ../resource/test_directory_3/root
2014-02-09 21:17:21,384 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["commit", ["9f5062b9d7ba14ef9971cd445801d5f53619d91af2adfb1ec9ca1b16", "5b6617519825f35b3dec13712467602e710130626d820a8374afaae0", null, "joe.keur", "70.55.44.120\n", "Mon Feb 10 02:17:21 2014", "third commit msg"]]
2014-02-09 21:17:21,386 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["tree", ["9f5062b9d7ba14ef9971cd445801d5f53619d91af2adfb1ec9ca1b16", "", [["aggregate", 0, 0, 0, 0]], ["L3Jvb3QKIC9hbGljZS50eHQvNTZjMjczMDM0ZTJkOGRiODg1N2YyYTZjNjIwZTU2ZmJkOWNkMGI0MzhhOGFlMzUwZTU5YmNhNjgvMTE4NAogL2ZvbGRlcgogIC9hbGljZV9yZW5hbWUudHh0LzU1ZTEzYThjZTI4YWU2NDBhYzg3NmJmYmJiODEzNTMwZGUyY2YzMjRkYjIxMDg2MjQ4NWRmMmIxLzYzNwogIC9OZXcgZm9sZGVyCiAvTmV3IGZvbGRlcgogIC9hbGljZV9yZW5hbWUudHh0LzU1ZTEzYThjZTI4YWU2NDBhYzg3NmJmYmJiODEzNTMwZGUyY2YzMjRkYjIxMDg2MjQ4NWRmMmIxLzYzNwogL2VtcHR5IGZvbGRlcgo="]]]
2014-02-09 21:17:21,387 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["commit", ["175e1b3a7e6fc50a81c0648d45226577124d5858622568a848cd41d7", "aeb50f73976e943e791470b7fd3fb708d1f71ce7e61f40626a0baefa", null, "joe.keur", "70.55.44.120\n", "Mon Feb 10 02:17:21 2014", "second commit msg"]]
2014-02-09 21:17:21,387 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["tree", ["175e1b3a7e6fc50a81c0648d45226577124d5858622568a848cd41d7", "", [["aggregate", 0, 0, 0, 0]], ["L3Jvb3QKIC9hbGljZS50eHQvN2Q2NTUwMzMzNWUwMzNkODYyMjFmZmRhM2YxMTkxYTMwYWEyMjEwMmYzY2I0ODc5YmE0ZGIyNjYvMTM4NAogL2ZvbGRlcgogIC9hbGljZS50eHQvNTVlMTNhOGNlMjhhZTY0MGFjODc2YmZiYmI4MTM1MzBkZTJjZjMyNGRiMjEwODYyNDg1ZGYyYjEvNjM3CiAvZW1wdHkgZm9sZGVyCg=="]]]
2014-02-09 21:17:21,388 | 8460 | MainProcess | DEBUG | local_blob_manager | store_file_blobs | Found duplicate files within working directory.  working: 55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1
2014-02-09 21:17:21,388 | 8460 | MainProcess | DEBUG | local_blob_manager | store_file_blobs | Found files with matching paths and names.  working: 56c273034e2d8db8857f2a6c620e56fbd9cd0b438a8ae350e59bca68, parent: 7d65503335e033d86221ffda3f1191a30aa22102f3cb4879ba4db266
2014-02-09 21:17:21,388 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["file", ["7d65503335e033d86221ffda3f1191a30aa22102f3cb4879ba4db266", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw0KDQpTbyBzaGUgd2FzIGNvbnNpZGVyaW5nIGluIGhlciBvd24gbWluZCAoYXMgd2VsbCBhcyBzaGUgY291bGQsIGZvciB0aGUNCmhvdCBkYXkgbWFkZSBoZXIgZmVlbCB2ZXJ5IHNsZWVweSBhbmQgc3R1cGlkKSwgd2hldGhlciB0aGUgcGxlYXN1cmUNCm9mIG1ha2luZyBhIGRhaXN5LWNoYWluIHdvdWxkIGJlIHdvcnRoIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdXAgYW5kDQpwaWNraW5nIHRoZSBkYWlzaWVzLCB3aGVuIHN1ZGRlbmx5IGEgV2hpdGUgUmFiYml0IHdpdGggcGluayBleWVzIHJhbg0KY2xvc2UgYnkgaGVyLg0KDQpUaGVyZSB3YXMgbm90aGluZyBzbyBWRVJZIHJlbWFya2FibGUgaW4gdGhhdDsgbm9yIGRpZCBBbGljZSB0aGluayBpdCBzbw0KVkVSWSBtdWNoIG91dCBvZiB0aGUgd2F5IHRvIGhlYXIgdGhlIFJhYmJpdCBzYXkgdG8gaXRzZWxmLCAnT2ggZGVhciENCk9oIGRlYXIhIEkgc2hhbGwgYmUgbGF0ZSEnICh3aGVuIHNoZSB0aG91Z2h0IGl0IG92ZXIgYWZ0ZXJ3YXJkcywgaXQNCm9jY3VycmVkIHRvIGhlciB0aGF0IHNoZSBvdWdodCB0byBoYXZlIHdvbmRlcmVkIGF0IHRoaXMsIGJ1dCBhdCB0aGUgdGltZQ0KaXQgYWxsIHNlZW1lZCBxdWl0ZSBuYXR1cmFsKTsgYnV0IHdoZW4gdGhlIFJhYmJpdCBhY3R1YWxseSBUT09LIEEgV0FUQ0gNCk9VVCBPRiBJVFMgV0FJU1RDT0FULVBPQ0tFVCwgYW5kIGxvb2tlZCBhdCBpdCwgYW5kIHRoZW4gaHVycmllZCBvbiwNCkFsaWNlIHN0YXJ0ZWQgdG8gaGVyIGZlZXQsIGZvciBpdCBmbGFzaGVkIGFjcm9zcyBoZXIgbWluZCB0aGF0IHNoZSBoYWQNCm5ldmVyIGJlZm9yZSBzZWVuIGEgcmFiYml0IHdpdGggZWl0aGVyIGEgd2Fpc3Rjb2F0LXBvY2tldCwgb3IgYSB3YXRjaA0KdG8gdGFrZSBvdXQgb2YgaXQsIGFuZCBidXJuaW5nIHdpdGggY3VyaW9zaXR5LCBzaGUgcmFuIGFjcm9zcyB0aGUgZmllbGQNCmFmdGVyIGl0LCBhbmQgZm9ydHVuYXRlbHkgd2FzIGp1c3QgaW4gdGltZSB0byBzZWUgaXQgcG9wIGRvd24gYSBsYXJnZQ0KcmFiYml0LWhvbGUgdW5kZXIgdGhlIGhlZGdlLg=="]]]
2014-02-09 21:17:21,391 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["56c273034e2d8db8857f2a6c620e56fbd9cd0b438a8ae350e59bca68", "7d65503335e033d86221ffda3f1191a30aa22102f3cb4879ba4db266", [["replace", 0, 1384, 0, 1184]], ["QUxJQ0UnUyBBRFZFTlRVUkVTIElOIFdPTkRFUkxBTkQNCg0KTGV3aXMgQ2Fycm9sbA0KDQpUSEUgTUlMTEVOTklVTSBGVUxDUlVNIEVESVRJT04gMy4wDQoNCg0KDQoNCkNIQVBURVIgSS4gRG93biB0aGUgUmFiYml0LUhvbGUNCg0KQWxpY2Ugd2FzIGJlZ2lubmluZyB0byBnZXQgdmVyeSB0aXJlZCBvZiBzaXR0aW5nIGJ5IGhlciBzaXN0ZXIgb24gdGhlDQpiYW5rLCBhbmQgb2YgaGF2aW5nIG5vdGhpbmcgdG8gZG86IG9uY2Ugb3IgdHdpY2Ugc2hlIGhhZCBwZWVwZWQgaW50byB0aGUNCmJvb2sgaGVyIHNpc3RlciB3YXMgcmVhZGluZywgYnV0IGl0IGhhZCBubyBwaWN0dXJlcyBvciBjb252ZXJzYXRpb25zIGluDQppdCwgJ2FuZCB3aGF0IGlzIHRoZSB1c2Ugb2YgYSBib29rLCcgdGhvdWdodCBBbGljZSAnd2l0aG91dCBwaWN0dXJlcyBvcg0KY29udmVyc2F0aW9uPycNCg0KVGhlcmUgd2FzIG5vdGhpbmcgc28gVkVSWSByZW1hcmthYmxlIGluIHRoYXQ7IG5vciBkaWQgQWxpY2UgdGhpbmsgaXQgc28NClZFUlkgbXVjaCBvdXQgb2YgdGhlIHdheSB0byBoZWFyIHRoZSBSYWJiaXQgc2F5IHRvIGl0c2VsZiwgJ09oIGRlYXIhDQpPaCBkZWFyISBJIHNoYWxsIGJlIGxhdGUhJyAod2hlbiBzaGUgdGhvdWdodCBpdCBvdmVyIGFmdGVyd2FyZHMsIGl0DQpvY2N1cnJlZCB0byBoZXIgdGhhdCBzaGUgb3VnaHQgdG8gaGF2ZSB3b25kZXJlZCBhdCB0aGlzLCBidXQgYXQgdGhlIHRpbWUNCml0IGFsbCBzZWVtZWQgcXVpdGUgbmF0dXJhbCk7IGJ1dCB3aGVuIHRoZSBSYWJiaXQgYWN0dWFsbHkgVE9PSyBBIFdBVENIDQpPVVQgT0YgSVRTIFdBSVNUQ09BVC1QT0NLRVQsIGFuZCBsb29rZWQgYXQgaXQsIGFuZCB0aGVuIGh1cnJpZWQgb24sDQpBbGljZSBzdGFydGVkIHRvIGhlciBmZWV0LCBmb3IgaXQgZmxhc2hlZCBhY3Jvc3MgaGVyIG1pbmQgdGhhdCBzaGUgaGFkDQpuZXZlciBiZWZvcmUgc2VlbiBhIHJhYmJpdCB3aXRoIGVpdGhlciBhIHdhaXN0Y29hdC1wb2NrZXQsIG9yIGEgd2F0Y2gNCnRvIHRha2Ugb3V0IG9mIGl0LCBhbmQgYnVybmluZyB3aXRoIGN1cmlvc2l0eSwgc2hlIHJhbiBhY3Jvc3MgdGhlIGZpZWxkDQphZnRlciBpdCwgYW5kIGZvcnR1bmF0ZWx5IHdhcyBqdXN0IGluIHRpbWUgdG8gc2VlIGl0IHBvcCBkb3duIGEgbGFyZ2UNCnJhYmJpdC1ob2xlIHVuZGVyIHRoZSBoZWRnZS4="]]]
2014-02-09 21:17:21,392 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw0KDQpTbyBzaGUgd2FzIGNvbnNpZGVyaW5nIGluIGhlciBvd24gbWluZCAoYXMgd2VsbCBhcyBzaGUgY291bGQsIGZvciB0aGUNCmhvdCBkYXkgbWFkZSBoZXIgZmVlbCB2ZXJ5IHNsZWVweSBhbmQgc3R1cGlkKSwgd2hldGhlciB0aGUgcGxlYXN1cmUNCm9mIG1ha2luZyBhIGRhaXN5LWNoYWluIHdvdWxkIGJlIHdvcnRoIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdXAgYW5kDQpwaWNraW5nIHRoZSBkYWlzaWVzLCB3aGVuIHN1ZGRlbmx5IGEgV2hpdGUgUmFiYml0IHdpdGggcGluayBleWVzIHJhbg0KY2xvc2UgYnkgaGVyLg=="]]]
2014-02-09 21:17:21,392 | 8460 | MainProcess | INFO | local_blob_manager | restore_directory | working_directory: ../resource/restore_directory_3, storage_directory: ../resource/peer_A_storage/test_share, commit_hash: c087b8a3f07e6aedfa003acd6d68c5c579d49d2e5f0f3c769f341c01
2014-02-09 21:17:21,393 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["commit", ["9f5062b9d7ba14ef9971cd445801d5f53619d91af2adfb1ec9ca1b16", "5b6617519825f35b3dec13712467602e710130626d820a8374afaae0", null, "joe.keur", "70.55.44.120\n", "Mon Feb 10 02:17:21 2014", "third commit msg"]]
2014-02-09 21:17:21,393 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["tree", ["9f5062b9d7ba14ef9971cd445801d5f53619d91af2adfb1ec9ca1b16", "", [["aggregate", 0, 0, 0, 0]], ["L3Jvb3QKIC9hbGljZS50eHQvNTZjMjczMDM0ZTJkOGRiODg1N2YyYTZjNjIwZTU2ZmJkOWNkMGI0MzhhOGFlMzUwZTU5YmNhNjgvMTE4NAogL2ZvbGRlcgogIC9hbGljZV9yZW5hbWUudHh0LzU1ZTEzYThjZTI4YWU2NDBhYzg3NmJmYmJiODEzNTMwZGUyY2YzMjRkYjIxMDg2MjQ4NWRmMmIxLzYzNwogIC9OZXcgZm9sZGVyCiAvTmV3IGZvbGRlcgogIC9hbGljZV9yZW5hbWUudHh0LzU1ZTEzYThjZTI4YWU2NDBhYzg3NmJmYmJiODEzNTMwZGUyY2YzMjRkYjIxMDg2MjQ4NWRmMmIxLzYzNwogL2VtcHR5IGZvbGRlcgo="]]]
2014-02-09 21:17:21,394 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["file", ["56c273034e2d8db8857f2a6c620e56fbd9cd0b438a8ae350e59bca68", "7d65503335e033d86221ffda3f1191a30aa22102f3cb4879ba4db266", [["replace", 0, 1384, 0, 1184]], ["QUxJQ0UnUyBBRFZFTlRVUkVTIElOIFdPTkRFUkxBTkQNCg0KTGV3aXMgQ2Fycm9sbA0KDQpUSEUgTUlMTEVOTklVTSBGVUxDUlVNIEVESVRJT04gMy4wDQoNCg0KDQoNCkNIQVBURVIgSS4gRG93biB0aGUgUmFiYml0LUhvbGUNCg0KQWxpY2Ugd2FzIGJlZ2lubmluZyB0byBnZXQgdmVyeSB0aXJlZCBvZiBzaXR0aW5nIGJ5IGhlciBzaXN0ZXIgb24gdGhlDQpiYW5rLCBhbmQgb2YgaGF2aW5nIG5vdGhpbmcgdG8gZG86IG9uY2Ugb3IgdHdpY2Ugc2hlIGhhZCBwZWVwZWQgaW50byB0aGUNCmJvb2sgaGVyIHNpc3RlciB3YXMgcmVhZGluZywgYnV0IGl0IGhhZCBubyBwaWN0dXJlcyBvciBjb252ZXJzYXRpb25zIGluDQppdCwgJ2FuZCB3aGF0IGlzIHRoZSB1c2Ugb2YgYSBib29rLCcgdGhvdWdodCBBbGljZSAnd2l0aG91dCBwaWN0dXJlcyBvcg0KY29udmVyc2F0aW9uPycNCg0KVGhlcmUgd2FzIG5vdGhpbmcgc28gVkVSWSByZW1hcmthYmxlIGluIHRoYXQ7IG5vciBkaWQgQWxpY2UgdGhpbmsgaXQgc28NClZFUlkgbXVjaCBvdXQgb2YgdGhlIHdheSB0byBoZWFyIHRoZSBSYWJiaXQgc2F5IHRvIGl0c2VsZiwgJ09oIGRlYXIhDQpPaCBkZWFyISBJIHNoYWxsIGJlIGxhdGUhJyAod2hlbiBzaGUgdGhvdWdodCBpdCBvdmVyIGFmdGVyd2FyZHMsIGl0DQpvY2N1cnJlZCB0byBoZXIgdGhhdCBzaGUgb3VnaHQgdG8gaGF2ZSB3b25kZXJlZCBhdCB0aGlzLCBidXQgYXQgdGhlIHRpbWUNCml0IGFsbCBzZWVtZWQgcXVpdGUgbmF0dXJhbCk7IGJ1dCB3aGVuIHRoZSBSYWJiaXQgYWN0dWFsbHkgVE9PSyBBIFdBVENIDQpPVVQgT0YgSVRTIFdBSVNUQ09BVC1QT0NLRVQsIGFuZCBsb29rZWQgYXQgaXQsIGFuZCB0aGVuIGh1cnJpZWQgb24sDQpBbGljZSBzdGFydGVkIHRvIGhlciBmZWV0LCBmb3IgaXQgZmxhc2hlZCBhY3Jvc3MgaGVyIG1pbmQgdGhhdCBzaGUgaGFkDQpuZXZlciBiZWZvcmUgc2VlbiBhIHJhYmJpdCB3aXRoIGVpdGhlciBhIHdhaXN0Y29hdC1wb2NrZXQsIG9yIGEgd2F0Y2gNCnRvIHRha2Ugb3V0IG9mIGl0LCBhbmQgYnVybmluZyB3aXRoIGN1cmlvc2l0eSwgc2hlIHJhbiBhY3Jvc3MgdGhlIGZpZWxkDQphZnRlciBpdCwgYW5kIGZvcnR1bmF0ZWx5IHdhcyBqdXN0IGluIHRpbWUgdG8gc2VlIGl0IHBvcCBkb3duIGEgbGFyZ2UNCnJhYmJpdC1ob2xlIHVuZGVyIHRoZSBoZWRnZS4="]]]
2014-02-09 21:17:21,395 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["file", ["7d65503335e033d86221ffda3f1191a30aa22102f3cb4879ba4db266", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw0KDQpTbyBzaGUgd2FzIGNvbnNpZGVyaW5nIGluIGhlciBvd24gbWluZCAoYXMgd2VsbCBhcyBzaGUgY291bGQsIGZvciB0aGUNCmhvdCBkYXkgbWFkZSBoZXIgZmVlbCB2ZXJ5IHNsZWVweSBhbmQgc3R1cGlkKSwgd2hldGhlciB0aGUgcGxlYXN1cmUNCm9mIG1ha2luZyBhIGRhaXN5LWNoYWluIHdvdWxkIGJlIHdvcnRoIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdXAgYW5kDQpwaWNraW5nIHRoZSBkYWlzaWVzLCB3aGVuIHN1ZGRlbmx5IGEgV2hpdGUgUmFiYml0IHdpdGggcGluayBleWVzIHJhbg0KY2xvc2UgYnkgaGVyLg0KDQpUaGVyZSB3YXMgbm90aGluZyBzbyBWRVJZIHJlbWFya2FibGUgaW4gdGhhdDsgbm9yIGRpZCBBbGljZSB0aGluayBpdCBzbw0KVkVSWSBtdWNoIG91dCBvZiB0aGUgd2F5IHRvIGhlYXIgdGhlIFJhYmJpdCBzYXkgdG8gaXRzZWxmLCAnT2ggZGVhciENCk9oIGRlYXIhIEkgc2hhbGwgYmUgbGF0ZSEnICh3aGVuIHNoZSB0aG91Z2h0IGl0IG92ZXIgYWZ0ZXJ3YXJkcywgaXQNCm9jY3VycmVkIHRvIGhlciB0aGF0IHNoZSBvdWdodCB0byBoYXZlIHdvbmRlcmVkIGF0IHRoaXMsIGJ1dCBhdCB0aGUgdGltZQ0KaXQgYWxsIHNlZW1lZCBxdWl0ZSBuYXR1cmFsKTsgYnV0IHdoZW4gdGhlIFJhYmJpdCBhY3R1YWxseSBUT09LIEEgV0FUQ0gNCk9VVCBPRiBJVFMgV0FJU1RDT0FULVBPQ0tFVCwgYW5kIGxvb2tlZCBhdCBpdCwgYW5kIHRoZW4gaHVycmllZCBvbiwNCkFsaWNlIHN0YXJ0ZWQgdG8gaGVyIGZlZXQsIGZvciBpdCBmbGFzaGVkIGFjcm9zcyBoZXIgbWluZCB0aGF0IHNoZSBoYWQNCm5ldmVyIGJlZm9yZSBzZWVuIGEgcmFiYml0IHdpdGggZWl0aGVyIGEgd2Fpc3Rjb2F0LXBvY2tldCwgb3IgYSB3YXRjaA0KdG8gdGFrZSBvdXQgb2YgaXQsIGFuZCBidXJuaW5nIHdpdGggY3VyaW9zaXR5LCBzaGUgcmFuIGFjcm9zcyB0aGUgZmllbGQNCmFmdGVyIGl0LCBhbmQgZm9ydHVuYXRlbHkgd2FzIGp1c3QgaW4gdGltZSB0byBzZWUgaXQgcG9wIGRvd24gYSBsYXJnZQ0KcmFiYml0LWhvbGUgdW5kZXIgdGhlIGhlZGdlLg=="]]]
2014-02-09 21:17:21,395 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["file", ["55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw0KDQpTbyBzaGUgd2FzIGNvbnNpZGVyaW5nIGluIGhlciBvd24gbWluZCAoYXMgd2VsbCBhcyBzaGUgY291bGQsIGZvciB0aGUNCmhvdCBkYXkgbWFkZSBoZXIgZmVlbCB2ZXJ5IHNsZWVweSBhbmQgc3R1cGlkKSwgd2hldGhlciB0aGUgcGxlYXN1cmUNCm9mIG1ha2luZyBhIGRhaXN5LWNoYWluIHdvdWxkIGJlIHdvcnRoIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdXAgYW5kDQpwaWNraW5nIHRoZSBkYWlzaWVzLCB3aGVuIHN1ZGRlbmx5IGEgV2hpdGUgUmFiYml0IHdpdGggcGluayBleWVzIHJhbg0KY2xvc2UgYnkgaGVyLg=="]]]
2014-02-09 21:17:21,396 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["file", ["55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw0KDQpTbyBzaGUgd2FzIGNvbnNpZGVyaW5nIGluIGhlciBvd24gbWluZCAoYXMgd2VsbCBhcyBzaGUgY291bGQsIGZvciB0aGUNCmhvdCBkYXkgbWFkZSBoZXIgZmVlbCB2ZXJ5IHNsZWVweSBhbmQgc3R1cGlkKSwgd2hldGhlciB0aGUgcGxlYXN1cmUNCm9mIG1ha2luZyBhIGRhaXN5LWNoYWluIHdvdWxkIGJlIHdvcnRoIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdXAgYW5kDQpwaWNraW5nIHRoZSBkYWlzaWVzLCB3aGVuIHN1ZGRlbmx5IGEgV2hpdGUgUmFiYml0IHdpdGggcGluayBleWVzIHJhbg0KY2xvc2UgYnkgaGVyLg=="]]]
2014-02-09 21:17:21,396 | 8460 | MainProcess | DEBUG | test | <module> | Testing network connections
2014-02-09 21:17:21,397 | 8460 | MainProcess | DEBUG | peer_service | __init__ | peer service initiated
2014-02-09 21:17:21,501 | 8460 | MainProcess | DEBUG | peer_service | __init__ | peer service initiated
2014-02-09 21:17:21,503 | 8460 | MainProcess | INFO | peer_manager | connect_machine | connecting to machine machine_B: http://localhost:42170
2014-02-09 21:17:21,513 | 8476 | Process-1 | INFO | peer_manager | ping | xmlrpc call.
2014-02-09 21:17:21,617 | 8460 | MainProcess | DEBUG | test | <module> | Testing network blob transfer to peer
2014-02-09 21:17:21,619 | 8460 | MainProcess | DEBUG | peer_service | __init__ | peer service initiated
2014-02-09 21:17:21,726 | 8460 | MainProcess | DEBUG | peer_service | __init__ | peer service initiated
2014-02-09 21:17:21,727 | 8460 | MainProcess | INFO | peer_manager | connect_machine | connecting to machine machine_B: http://localhost:42172
2014-02-09 21:17:21,738 | 8477 | Process-2 | INFO | peer_manager | save_file | xmlrpc call  file_name: a1f7f4060ff3f7c0b7c28b4a37990a851a225e475d47da7a0d82dec5
2014-02-09 21:17:21,845 | 8460 | MainProcess | DEBUG | test | <module> | Testing network blob transfer from peer
2014-02-09 21:17:21,847 | 8460 | MainProcess | DEBUG | peer_service | __init__ | peer service initiated
2014-02-09 21:17:21,953 | 8460 | MainProcess | DEBUG | peer_service | __init__ | peer service initiated
2014-02-09 21:17:21,955 | 8460 | MainProcess | INFO | peer_manager | connect_machine | connecting to machine machine_B: http://localhost:42174
2014-02-09 21:17:21,965 | 8484 | Process-3 | INFO | peer_manager | get_file | xmlrpc call  share_ID: test_share, file_name: a1f7f4060ff3f7c0b7c28b4a37990a851a225e475d47da7a0d82dec5
2014-02-09 21:17:22,072 | 8460 | MainProcess | DEBUG | test | <module> | Testing large network blob transfer to peer
2014-02-09 21:17:22,085 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["f6dd30c93f30afe45d33714a41392d0a5d8f02784dfac0ebd66a9993", "", [["aggregate", 0, 0, 0, 0]], [""]]]
2014-02-09 21:17:22,092 | 8460 | MainProcess | DEBUG | peer_service | __init__ | peer service initiated
2014-02-09 21:17:22,195 | 8460 | MainProcess | DEBUG | peer_service | __init__ | peer service initiated
2014-02-09 21:17:22,197 | 8460 | MainProcess | INFO | peer_manager | connect_machine | connecting to machine machine_B: http://localhost:42176
2014-02-09 21:17:22,208 | 8485 | Process-4 | INFO | peer_manager | save_file | xmlrpc call  file_name: f6dd30c93f30afe45d33714a41392d0a5d8f02784dfac0ebd66a9993
2014-02-09 21:17:22,315 | 8460 | MainProcess | DEBUG | test | <module> | Testing receiving all commits form peer
2014-02-09 21:17:22,317 | 8460 | MainProcess | DEBUG | peer_service | __init__ | peer service initiated
2014-02-09 21:17:22,423 | 8460 | MainProcess | DEBUG | peer_service | __init__ | peer service initiated
2014-02-09 21:17:22,425 | 8460 | MainProcess | INFO | peer_manager | connect_machine | connecting to machine machine_A: http://localhost:42178
2014-02-09 21:17:22,539 | 8486 | Process-5 | INFO | peer_manager | get_all_commits | xmlrpc call  share_ID: test_share, return_machine_ID: http://localhost:42179
2014-02-09 21:17:22,644 | 8460 | MainProcess | DEBUG | test | <module> | Testing printing all commit info transfered to peer C
2014-02-09 21:17:22,647 | 8460 | MainProcess | DEBUG | test | <module> | Testing collecting all blobs for a given commit
2014-02-09 21:17:22,649 | 8460 | MainProcess | DEBUG | peer_service | __init__ | peer service initiated
2014-02-09 21:17:22,755 | 8460 | MainProcess | DEBUG | peer_service | __init__ | peer service initiated
2014-02-09 21:17:22,757 | 8460 | MainProcess | INFO | peer_manager | connect_machine | connecting to machine machine_A: http://localhost:42180
2014-02-09 21:17:22,759 | 8460 | MainProcess | DEBUG | peer_manager | collect_commit_dependencies | requesting file to fill dependency: _c087b8a3f07e6aedfa003acd6d68c5c579d49d2e5f0f3c769f341c01
2014-02-09 21:17:22,768 | 8488 | Process-7 | INFO | peer_manager | get_file | xmlrpc call  share_ID: test_share, file_name: _c087b8a3f07e6aedfa003acd6d68c5c579d49d2e5f0f3c769f341c01
2014-02-09 21:17:22,776 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["commit", ["9f5062b9d7ba14ef9971cd445801d5f53619d91af2adfb1ec9ca1b16", "5b6617519825f35b3dec13712467602e710130626d820a8374afaae0", null, "joe.keur", "70.55.44.120\n", "Mon Feb 10 02:17:21 2014", "third commit msg"]]
2014-02-09 21:17:22,778 | 8460 | MainProcess | DEBUG | peer_manager | collect_commit_dependencies | requesting file to fill dependency: 9f5062b9d7ba14ef9971cd445801d5f53619d91af2adfb1ec9ca1b16
2014-02-09 21:17:22,785 | 8488 | Process-7 | INFO | peer_manager | get_file | xmlrpc call  share_ID: test_share, file_name: 9f5062b9d7ba14ef9971cd445801d5f53619d91af2adfb1ec9ca1b16
2014-02-09 21:17:22,792 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["commit", ["9f5062b9d7ba14ef9971cd445801d5f53619d91af2adfb1ec9ca1b16", "5b6617519825f35b3dec13712467602e710130626d820a8374afaae0", null, "joe.keur", "70.55.44.120\n", "Mon Feb 10 02:17:21 2014", "third commit msg"]]
2014-02-09 21:17:22,795 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["tree", ["9f5062b9d7ba14ef9971cd445801d5f53619d91af2adfb1ec9ca1b16", "", [["aggregate", 0, 0, 0, 0]], ["L3Jvb3QKIC9hbGljZS50eHQvNTZjMjczMDM0ZTJkOGRiODg1N2YyYTZjNjIwZTU2ZmJkOWNkMGI0MzhhOGFlMzUwZTU5YmNhNjgvMTE4NAogL2ZvbGRlcgogIC9hbGljZV9yZW5hbWUudHh0LzU1ZTEzYThjZTI4YWU2NDBhYzg3NmJmYmJiODEzNTMwZGUyY2YzMjRkYjIxMDg2MjQ4NWRmMmIxLzYzNwogIC9OZXcgZm9sZGVyCiAvTmV3IGZvbGRlcgogIC9hbGljZV9yZW5hbWUudHh0LzU1ZTEzYThjZTI4YWU2NDBhYzg3NmJmYmJiODEzNTMwZGUyY2YzMjRkYjIxMDg2MjQ4NWRmMmIxLzYzNwogL2VtcHR5IGZvbGRlcgo="]]]
2014-02-09 21:17:22,797 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["tree", ["9f5062b9d7ba14ef9971cd445801d5f53619d91af2adfb1ec9ca1b16", "", [["aggregate", 0, 0, 0, 0]], ["L3Jvb3QKIC9hbGljZS50eHQvNTZjMjczMDM0ZTJkOGRiODg1N2YyYTZjNjIwZTU2ZmJkOWNkMGI0MzhhOGFlMzUwZTU5YmNhNjgvMTE4NAogL2ZvbGRlcgogIC9hbGljZV9yZW5hbWUudHh0LzU1ZTEzYThjZTI4YWU2NDBhYzg3NmJmYmJiODEzNTMwZGUyY2YzMjRkYjIxMDg2MjQ4NWRmMmIxLzYzNwogIC9OZXcgZm9sZGVyCiAvTmV3IGZvbGRlcgogIC9hbGljZV9yZW5hbWUudHh0LzU1ZTEzYThjZTI4YWU2NDBhYzg3NmJmYmJiODEzNTMwZGUyY2YzMjRkYjIxMDg2MjQ4NWRmMmIxLzYzNwogL2VtcHR5IGZvbGRlcgo="]]]
2014-02-09 21:17:22,799 | 8460 | MainProcess | DEBUG | peer_manager | collect_commit_dependencies | requesting file to fill dependency: 56c273034e2d8db8857f2a6c620e56fbd9cd0b438a8ae350e59bca68
2014-02-09 21:17:22,806 | 8488 | Process-7 | INFO | peer_manager | get_file | xmlrpc call  share_ID: test_share, file_name: 56c273034e2d8db8857f2a6c620e56fbd9cd0b438a8ae350e59bca68
2014-02-09 21:17:22,812 | 8460 | MainProcess | DEBUG | peer_manager | collect_commit_dependencies | requesting file to fill dependency: 55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1
2014-02-09 21:17:22,818 | 8488 | Process-7 | INFO | peer_manager | get_file | xmlrpc call  share_ID: test_share, file_name: 55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1
2014-02-09 21:17:22,824 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["commit", ["9f5062b9d7ba14ef9971cd445801d5f53619d91af2adfb1ec9ca1b16", "5b6617519825f35b3dec13712467602e710130626d820a8374afaae0", null, "joe.keur", "70.55.44.120\n", "Mon Feb 10 02:17:21 2014", "third commit msg"]]
2014-02-09 21:17:22,825 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["tree", ["9f5062b9d7ba14ef9971cd445801d5f53619d91af2adfb1ec9ca1b16", "", [["aggregate", 0, 0, 0, 0]], ["L3Jvb3QKIC9hbGljZS50eHQvNTZjMjczMDM0ZTJkOGRiODg1N2YyYTZjNjIwZTU2ZmJkOWNkMGI0MzhhOGFlMzUwZTU5YmNhNjgvMTE4NAogL2ZvbGRlcgogIC9hbGljZV9yZW5hbWUudHh0LzU1ZTEzYThjZTI4YWU2NDBhYzg3NmJmYmJiODEzNTMwZGUyY2YzMjRkYjIxMDg2MjQ4NWRmMmIxLzYzNwogIC9OZXcgZm9sZGVyCiAvTmV3IGZvbGRlcgogIC9hbGljZV9yZW5hbWUudHh0LzU1ZTEzYThjZTI4YWU2NDBhYzg3NmJmYmJiODEzNTMwZGUyY2YzMjRkYjIxMDg2MjQ4NWRmMmIxLzYzNwogL2VtcHR5IGZvbGRlcgo="]]]
2014-02-09 21:17:22,827 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["tree", ["9f5062b9d7ba14ef9971cd445801d5f53619d91af2adfb1ec9ca1b16", "", [["aggregate", 0, 0, 0, 0]], ["L3Jvb3QKIC9hbGljZS50eHQvNTZjMjczMDM0ZTJkOGRiODg1N2YyYTZjNjIwZTU2ZmJkOWNkMGI0MzhhOGFlMzUwZTU5YmNhNjgvMTE4NAogL2ZvbGRlcgogIC9hbGljZV9yZW5hbWUudHh0LzU1ZTEzYThjZTI4YWU2NDBhYzg3NmJmYmJiODEzNTMwZGUyY2YzMjRkYjIxMDg2MjQ4NWRmMmIxLzYzNwogIC9OZXcgZm9sZGVyCiAvTmV3IGZvbGRlcgogIC9hbGljZV9yZW5hbWUudHh0LzU1ZTEzYThjZTI4YWU2NDBhYzg3NmJmYmJiODEzNTMwZGUyY2YzMjRkYjIxMDg2MjQ4NWRmMmIxLzYzNwogL2VtcHR5IGZvbGRlcgo="]]]
2014-02-09 21:17:22,829 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["file", ["56c273034e2d8db8857f2a6c620e56fbd9cd0b438a8ae350e59bca68", "7d65503335e033d86221ffda3f1191a30aa22102f3cb4879ba4db266", [["replace", 0, 1384, 0, 1184]], ["QUxJQ0UnUyBBRFZFTlRVUkVTIElOIFdPTkRFUkxBTkQNCg0KTGV3aXMgQ2Fycm9sbA0KDQpUSEUgTUlMTEVOTklVTSBGVUxDUlVNIEVESVRJT04gMy4wDQoNCg0KDQoNCkNIQVBURVIgSS4gRG93biB0aGUgUmFiYml0LUhvbGUNCg0KQWxpY2Ugd2FzIGJlZ2lubmluZyB0byBnZXQgdmVyeSB0aXJlZCBvZiBzaXR0aW5nIGJ5IGhlciBzaXN0ZXIgb24gdGhlDQpiYW5rLCBhbmQgb2YgaGF2aW5nIG5vdGhpbmcgdG8gZG86IG9uY2Ugb3IgdHdpY2Ugc2hlIGhhZCBwZWVwZWQgaW50byB0aGUNCmJvb2sgaGVyIHNpc3RlciB3YXMgcmVhZGluZywgYnV0IGl0IGhhZCBubyBwaWN0dXJlcyBvciBjb252ZXJzYXRpb25zIGluDQppdCwgJ2FuZCB3aGF0IGlzIHRoZSB1c2Ugb2YgYSBib29rLCcgdGhvdWdodCBBbGljZSAnd2l0aG91dCBwaWN0dXJlcyBvcg0KY29udmVyc2F0aW9uPycNCg0KVGhlcmUgd2FzIG5vdGhpbmcgc28gVkVSWSByZW1hcmthYmxlIGluIHRoYXQ7IG5vciBkaWQgQWxpY2UgdGhpbmsgaXQgc28NClZFUlkgbXVjaCBvdXQgb2YgdGhlIHdheSB0byBoZWFyIHRoZSBSYWJiaXQgc2F5IHRvIGl0c2VsZiwgJ09oIGRlYXIhDQpPaCBkZWFyISBJIHNoYWxsIGJlIGxhdGUhJyAod2hlbiBzaGUgdGhvdWdodCBpdCBvdmVyIGFmdGVyd2FyZHMsIGl0DQpvY2N1cnJlZCB0byBoZXIgdGhhdCBzaGUgb3VnaHQgdG8gaGF2ZSB3b25kZXJlZCBhdCB0aGlzLCBidXQgYXQgdGhlIHRpbWUNCml0IGFsbCBzZWVtZWQgcXVpdGUgbmF0dXJhbCk7IGJ1dCB3aGVuIHRoZSBSYWJiaXQgYWN0dWFsbHkgVE9PSyBBIFdBVENIDQpPVVQgT0YgSVRTIFdBSVNUQ09BVC1QT0NLRVQsIGFuZCBsb29rZWQgYXQgaXQsIGFuZCB0aGVuIGh1cnJpZWQgb24sDQpBbGljZSBzdGFydGVkIHRvIGhlciBmZWV0LCBmb3IgaXQgZmxhc2hlZCBhY3Jvc3MgaGVyIG1pbmQgdGhhdCBzaGUgaGFkDQpuZXZlciBiZWZvcmUgc2VlbiBhIHJhYmJpdCB3aXRoIGVpdGhlciBhIHdhaXN0Y29hdC1wb2NrZXQsIG9yIGEgd2F0Y2gNCnRvIHRha2Ugb3V0IG9mIGl0LCBhbmQgYnVybmluZyB3aXRoIGN1cmlvc2l0eSwgc2hlIHJhbiBhY3Jvc3MgdGhlIGZpZWxkDQphZnRlciBpdCwgYW5kIGZvcnR1bmF0ZWx5IHdhcyBqdXN0IGluIHRpbWUgdG8gc2VlIGl0IHBvcCBkb3duIGEgbGFyZ2UNCnJhYmJpdC1ob2xlIHVuZGVyIHRoZSBoZWRnZS4="]]]
2014-02-09 21:17:22,832 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["file", ["55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw0KDQpTbyBzaGUgd2FzIGNvbnNpZGVyaW5nIGluIGhlciBvd24gbWluZCAoYXMgd2VsbCBhcyBzaGUgY291bGQsIGZvciB0aGUNCmhvdCBkYXkgbWFkZSBoZXIgZmVlbCB2ZXJ5IHNsZWVweSBhbmQgc3R1cGlkKSwgd2hldGhlciB0aGUgcGxlYXN1cmUNCm9mIG1ha2luZyBhIGRhaXN5LWNoYWluIHdvdWxkIGJlIHdvcnRoIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdXAgYW5kDQpwaWNraW5nIHRoZSBkYWlzaWVzLCB3aGVuIHN1ZGRlbmx5IGEgV2hpdGUgUmFiYml0IHdpdGggcGluayBleWVzIHJhbg0KY2xvc2UgYnkgaGVyLg=="]]]
2014-02-09 21:17:22,833 | 8460 | MainProcess | DEBUG | peer_manager | collect_commit_dependencies | requesting file to fill dependency: 7d65503335e033d86221ffda3f1191a30aa22102f3cb4879ba4db266
2014-02-09 21:17:22,841 | 8488 | Process-7 | INFO | peer_manager | get_file | xmlrpc call  share_ID: test_share, file_name: 7d65503335e033d86221ffda3f1191a30aa22102f3cb4879ba4db266
2014-02-09 21:17:22,851 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["commit", ["9f5062b9d7ba14ef9971cd445801d5f53619d91af2adfb1ec9ca1b16", "5b6617519825f35b3dec13712467602e710130626d820a8374afaae0", null, "joe.keur", "70.55.44.120\n", "Mon Feb 10 02:17:21 2014", "third commit msg"]]
2014-02-09 21:17:22,852 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["tree", ["9f5062b9d7ba14ef9971cd445801d5f53619d91af2adfb1ec9ca1b16", "", [["aggregate", 0, 0, 0, 0]], ["L3Jvb3QKIC9hbGljZS50eHQvNTZjMjczMDM0ZTJkOGRiODg1N2YyYTZjNjIwZTU2ZmJkOWNkMGI0MzhhOGFlMzUwZTU5YmNhNjgvMTE4NAogL2ZvbGRlcgogIC9hbGljZV9yZW5hbWUudHh0LzU1ZTEzYThjZTI4YWU2NDBhYzg3NmJmYmJiODEzNTMwZGUyY2YzMjRkYjIxMDg2MjQ4NWRmMmIxLzYzNwogIC9OZXcgZm9sZGVyCiAvTmV3IGZvbGRlcgogIC9hbGljZV9yZW5hbWUudHh0LzU1ZTEzYThjZTI4YWU2NDBhYzg3NmJmYmJiODEzNTMwZGUyY2YzMjRkYjIxMDg2MjQ4NWRmMmIxLzYzNwogL2VtcHR5IGZvbGRlcgo="]]]
2014-02-09 21:17:22,852 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["tree", ["9f5062b9d7ba14ef9971cd445801d5f53619d91af2adfb1ec9ca1b16", "", [["aggregate", 0, 0, 0, 0]], ["L3Jvb3QKIC9hbGljZS50eHQvNTZjMjczMDM0ZTJkOGRiODg1N2YyYTZjNjIwZTU2ZmJkOWNkMGI0MzhhOGFlMzUwZTU5YmNhNjgvMTE4NAogL2ZvbGRlcgogIC9hbGljZV9yZW5hbWUudHh0LzU1ZTEzYThjZTI4YWU2NDBhYzg3NmJmYmJiODEzNTMwZGUyY2YzMjRkYjIxMDg2MjQ4NWRmMmIxLzYzNwogIC9OZXcgZm9sZGVyCiAvTmV3IGZvbGRlcgogIC9hbGljZV9yZW5hbWUudHh0LzU1ZTEzYThjZTI4YWU2NDBhYzg3NmJmYmJiODEzNTMwZGUyY2YzMjRkYjIxMDg2MjQ4NWRmMmIxLzYzNwogL2VtcHR5IGZvbGRlcgo="]]]
2014-02-09 21:17:22,853 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["file", ["56c273034e2d8db8857f2a6c620e56fbd9cd0b438a8ae350e59bca68", "7d65503335e033d86221ffda3f1191a30aa22102f3cb4879ba4db266", [["replace", 0, 1384, 0, 1184]], ["QUxJQ0UnUyBBRFZFTlRVUkVTIElOIFdPTkRFUkxBTkQNCg0KTGV3aXMgQ2Fycm9sbA0KDQpUSEUgTUlMTEVOTklVTSBGVUxDUlVNIEVESVRJT04gMy4wDQoNCg0KDQoNCkNIQVBURVIgSS4gRG93biB0aGUgUmFiYml0LUhvbGUNCg0KQWxpY2Ugd2FzIGJlZ2lubmluZyB0byBnZXQgdmVyeSB0aXJlZCBvZiBzaXR0aW5nIGJ5IGhlciBzaXN0ZXIgb24gdGhlDQpiYW5rLCBhbmQgb2YgaGF2aW5nIG5vdGhpbmcgdG8gZG86IG9uY2Ugb3IgdHdpY2Ugc2hlIGhhZCBwZWVwZWQgaW50byB0aGUNCmJvb2sgaGVyIHNpc3RlciB3YXMgcmVhZGluZywgYnV0IGl0IGhhZCBubyBwaWN0dXJlcyBvciBjb252ZXJzYXRpb25zIGluDQppdCwgJ2FuZCB3aGF0IGlzIHRoZSB1c2Ugb2YgYSBib29rLCcgdGhvdWdodCBBbGljZSAnd2l0aG91dCBwaWN0dXJlcyBvcg0KY29udmVyc2F0aW9uPycNCg0KVGhlcmUgd2FzIG5vdGhpbmcgc28gVkVSWSByZW1hcmthYmxlIGluIHRoYXQ7IG5vciBkaWQgQWxpY2UgdGhpbmsgaXQgc28NClZFUlkgbXVjaCBvdXQgb2YgdGhlIHdheSB0byBoZWFyIHRoZSBSYWJiaXQgc2F5IHRvIGl0c2VsZiwgJ09oIGRlYXIhDQpPaCBkZWFyISBJIHNoYWxsIGJlIGxhdGUhJyAod2hlbiBzaGUgdGhvdWdodCBpdCBvdmVyIGFmdGVyd2FyZHMsIGl0DQpvY2N1cnJlZCB0byBoZXIgdGhhdCBzaGUgb3VnaHQgdG8gaGF2ZSB3b25kZXJlZCBhdCB0aGlzLCBidXQgYXQgdGhlIHRpbWUNCml0IGFsbCBzZWVtZWQgcXVpdGUgbmF0dXJhbCk7IGJ1dCB3aGVuIHRoZSBSYWJiaXQgYWN0dWFsbHkgVE9PSyBBIFdBVENIDQpPVVQgT0YgSVRTIFdBSVNUQ09BVC1QT0NLRVQsIGFuZCBsb29rZWQgYXQgaXQsIGFuZCB0aGVuIGh1cnJpZWQgb24sDQpBbGljZSBzdGFydGVkIHRvIGhlciBmZWV0LCBmb3IgaXQgZmxhc2hlZCBhY3Jvc3MgaGVyIG1pbmQgdGhhdCBzaGUgaGFkDQpuZXZlciBiZWZvcmUgc2VlbiBhIHJhYmJpdCB3aXRoIGVpdGhlciBhIHdhaXN0Y29hdC1wb2NrZXQsIG9yIGEgd2F0Y2gNCnRvIHRha2Ugb3V0IG9mIGl0LCBhbmQgYnVybmluZyB3aXRoIGN1cmlvc2l0eSwgc2hlIHJhbiBhY3Jvc3MgdGhlIGZpZWxkDQphZnRlciBpdCwgYW5kIGZvcnR1bmF0ZWx5IHdhcyBqdXN0IGluIHRpbWUgdG8gc2VlIGl0IHBvcCBkb3duIGEgbGFyZ2UNCnJhYmJpdC1ob2xlIHVuZGVyIHRoZSBoZWRnZS4="]]]
2014-02-09 21:17:22,854 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["file", ["7d65503335e033d86221ffda3f1191a30aa22102f3cb4879ba4db266", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw0KDQpTbyBzaGUgd2FzIGNvbnNpZGVyaW5nIGluIGhlciBvd24gbWluZCAoYXMgd2VsbCBhcyBzaGUgY291bGQsIGZvciB0aGUNCmhvdCBkYXkgbWFkZSBoZXIgZmVlbCB2ZXJ5IHNsZWVweSBhbmQgc3R1cGlkKSwgd2hldGhlciB0aGUgcGxlYXN1cmUNCm9mIG1ha2luZyBhIGRhaXN5LWNoYWluIHdvdWxkIGJlIHdvcnRoIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdXAgYW5kDQpwaWNraW5nIHRoZSBkYWlzaWVzLCB3aGVuIHN1ZGRlbmx5IGEgV2hpdGUgUmFiYml0IHdpdGggcGluayBleWVzIHJhbg0KY2xvc2UgYnkgaGVyLg0KDQpUaGVyZSB3YXMgbm90aGluZyBzbyBWRVJZIHJlbWFya2FibGUgaW4gdGhhdDsgbm9yIGRpZCBBbGljZSB0aGluayBpdCBzbw0KVkVSWSBtdWNoIG91dCBvZiB0aGUgd2F5IHRvIGhlYXIgdGhlIFJhYmJpdCBzYXkgdG8gaXRzZWxmLCAnT2ggZGVhciENCk9oIGRlYXIhIEkgc2hhbGwgYmUgbGF0ZSEnICh3aGVuIHNoZSB0aG91Z2h0IGl0IG92ZXIgYWZ0ZXJ3YXJkcywgaXQNCm9jY3VycmVkIHRvIGhlciB0aGF0IHNoZSBvdWdodCB0byBoYXZlIHdvbmRlcmVkIGF0IHRoaXMsIGJ1dCBhdCB0aGUgdGltZQ0KaXQgYWxsIHNlZW1lZCBxdWl0ZSBuYXR1cmFsKTsgYnV0IHdoZW4gdGhlIFJhYmJpdCBhY3R1YWxseSBUT09LIEEgV0FUQ0gNCk9VVCBPRiBJVFMgV0FJU1RDT0FULVBPQ0tFVCwgYW5kIGxvb2tlZCBhdCBpdCwgYW5kIHRoZW4gaHVycmllZCBvbiwNCkFsaWNlIHN0YXJ0ZWQgdG8gaGVyIGZlZXQsIGZvciBpdCBmbGFzaGVkIGFjcm9zcyBoZXIgbWluZCB0aGF0IHNoZSBoYWQNCm5ldmVyIGJlZm9yZSBzZWVuIGEgcmFiYml0IHdpdGggZWl0aGVyIGEgd2Fpc3Rjb2F0LXBvY2tldCwgb3IgYSB3YXRjaA0KdG8gdGFrZSBvdXQgb2YgaXQsIGFuZCBidXJuaW5nIHdpdGggY3VyaW9zaXR5LCBzaGUgcmFuIGFjcm9zcyB0aGUgZmllbGQNCmFmdGVyIGl0LCBhbmQgZm9ydHVuYXRlbHkgd2FzIGp1c3QgaW4gdGltZSB0byBzZWUgaXQgcG9wIGRvd24gYSBsYXJnZQ0KcmFiYml0LWhvbGUgdW5kZXIgdGhlIGhlZGdlLg=="]]]
2014-02-09 21:17:22,854 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["file", ["55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw0KDQpTbyBzaGUgd2FzIGNvbnNpZGVyaW5nIGluIGhlciBvd24gbWluZCAoYXMgd2VsbCBhcyBzaGUgY291bGQsIGZvciB0aGUNCmhvdCBkYXkgbWFkZSBoZXIgZmVlbCB2ZXJ5IHNsZWVweSBhbmQgc3R1cGlkKSwgd2hldGhlciB0aGUgcGxlYXN1cmUNCm9mIG1ha2luZyBhIGRhaXN5LWNoYWluIHdvdWxkIGJlIHdvcnRoIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdXAgYW5kDQpwaWNraW5nIHRoZSBkYWlzaWVzLCB3aGVuIHN1ZGRlbmx5IGEgV2hpdGUgUmFiYml0IHdpdGggcGluayBleWVzIHJhbg0KY2xvc2UgYnkgaGVyLg=="]]]
2014-02-09 21:17:22,956 | 8460 | MainProcess | DEBUG | test | <module> | Testing sending a directory update
2014-02-09 21:17:22,958 | 8460 | MainProcess | DEBUG | peer_service | __init__ | peer service initiated
2014-02-09 21:17:23,062 | 8460 | MainProcess | DEBUG | peer_service | __init__ | peer service initiated
2014-02-09 21:17:23,063 | 8460 | MainProcess | INFO | peer_manager | connect_machine | connecting to machine machine_C: http://localhost:42182
2014-02-09 21:17:23,164 | 8460 | MainProcess | DEBUG | test | <module> | Testing receiving a directory update
2014-02-09 21:17:23,166 | 8460 | MainProcess | DEBUG | test | <module> | Test saving and loading peer connection info
2014-02-09 21:17:23,168 | 8460 | MainProcess | DEBUG | peer_service | __init__ | peer service initiated
2014-02-09 21:17:23,274 | 8460 | MainProcess | DEBUG | peer_service | __init__ | peer service initiated
2014-02-09 21:17:23,276 | 8460 | MainProcess | INFO | peer_manager | connect_machine | connecting to machine machine_C: http://localhost:42184
2014-02-09 21:17:23,381 | 8460 | MainProcess | DEBUG | test | <module> | Testing automatic sync
2014-02-09 21:17:23,383 | 8460 | MainProcess | DEBUG | peer_service | __init__ | peer service initiated
2014-02-09 21:17:23,489 | 8460 | MainProcess | DEBUG | peer_service | __init__ | peer service initiated
2014-02-09 21:17:23,491 | 8460 | MainProcess | INFO | peer_manager | connect_machine | connecting to machine machine_A: http://localhost:42186
2014-02-09 21:17:27,220 | 8460 | MainProcess | DEBUG | auto_sync | on_any_event | auto sync directory event triggered
2014-02-09 21:17:27,321 | 8460 | MainProcess | INFO | local_blob_manager | commit_directory | working_directory: ../resource/restore_directory_3, storage_directory: ../resource/peer_C_storage/test_share, user_name: auto_sync_user, commit_msg: auto, parent_commit_hash: None, other_parent_commit_hash: None
2014-02-09 21:17:27,323 | 8460 | MainProcess | INFO | tree_blob | create_tree_text | encoding directory structure into text format for path: ../resource/restore_directory_3
2014-02-09 21:17:27,345 | 8460 | MainProcess | DEBUG | tree_blob | create_tree_text | 
/restore_directory_3
 /root
  /alice_copy.txt/389ae029061b88f3d5a77a731018920f7274d3c8ce6a09f0e8836280/1384
  /alice.txt/389ae029061b88f3d5a77a731018920f7274d3c8ce6a09f0e8836280/1384
  /alice (copy).txt~/cf6dc0646e6eea930b5553d00a6e64dad66a5c9acd761da7ca72f5e8/443
  /folder
   /alice_rename.txt/55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1/637
   /New folder
  /New folder
   /alice_rename.txt/55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1/637
  /empty folder

2014-02-09 21:17:27,349 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["tree", ["217e77b822f393e35357eebd66dd6a18eb333c933fdb2bc762deb7fe", "", [["aggregate", 0, 0, 0, 0]], ["L3Jlc3RvcmVfZGlyZWN0b3J5XzMKIC9yb290CiAgL2FsaWNlX2NvcHkudHh0LzM4OWFlMDI5MDYxYjg4ZjNkNWE3N2E3MzEwMTg5MjBmNzI3NGQzYzhjZTZhMDlmMGU4ODM2MjgwLzEzODQKICAvYWxpY2UudHh0LzM4OWFlMDI5MDYxYjg4ZjNkNWE3N2E3MzEwMTg5MjBmNzI3NGQzYzhjZTZhMDlmMGU4ODM2MjgwLzEzODQKICAvYWxpY2UgKGNvcHkpLnR4dH4vY2Y2ZGMwNjQ2ZTZlZWE5MzBiNTU1M2QwMGE2ZTY0ZGFkNjZhNWM5YWNkNzYxZGE3Y2E3MmY1ZTgvNDQzCiAgL2ZvbGRlcgogICAvYWxpY2VfcmVuYW1lLnR4dC81NWUxM2E4Y2UyOGFlNjQwYWM4NzZiZmJiYjgxMzUzMGRlMmNmMzI0ZGIyMTA4NjI0ODVkZjJiMS82MzcKICAgL05ldyBmb2xkZXIKICAvTmV3IGZvbGRlcgogICAvYWxpY2VfcmVuYW1lLnR4dC81NWUxM2E4Y2UyOGFlNjQwYWM4NzZiZmJiYjgxMzUzMGRlMmNmMzI0ZGIyMTA4NjI0ODVkZjJiMS82MzcKICAvZW1wdHkgZm9sZGVyCg=="]]]
2014-02-09 21:17:27,552 | 8460 | MainProcess | DEBUG | commit_blob | store | File string for encrypting: ["commit", ["217e77b822f393e35357eebd66dd6a18eb333c933fdb2bc762deb7fe", null, null, "auto_sync_user", "70.55.44.120\n", "Mon Feb 10 02:17:27 2014", "auto"]]
2014-02-09 21:17:27,554 | 8460 | MainProcess | INFO | local_blob_manager | store_file_blobs | commit_hash: cfefea1c608058f275280009b985df26fb87dfbc97250e1e5efc0ad7, parent_commit_hash: None, storage_directory: ../resource/peer_C_storage/test_share, working_directory: ../resource/restore_directory_3
2014-02-09 21:17:27,554 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["commit", ["217e77b822f393e35357eebd66dd6a18eb333c933fdb2bc762deb7fe", null, null, "auto_sync_user", "70.55.44.120\n", "Mon Feb 10 02:17:27 2014", "auto"]]
2014-02-09 21:17:27,555 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["tree", ["217e77b822f393e35357eebd66dd6a18eb333c933fdb2bc762deb7fe", "", [["aggregate", 0, 0, 0, 0]], ["L3Jlc3RvcmVfZGlyZWN0b3J5XzMKIC9yb290CiAgL2FsaWNlX2NvcHkudHh0LzM4OWFlMDI5MDYxYjg4ZjNkNWE3N2E3MzEwMTg5MjBmNzI3NGQzYzhjZTZhMDlmMGU4ODM2MjgwLzEzODQKICAvYWxpY2UudHh0LzM4OWFlMDI5MDYxYjg4ZjNkNWE3N2E3MzEwMTg5MjBmNzI3NGQzYzhjZTZhMDlmMGU4ODM2MjgwLzEzODQKICAvYWxpY2UgKGNvcHkpLnR4dH4vY2Y2ZGMwNjQ2ZTZlZWE5MzBiNTU1M2QwMGE2ZTY0ZGFkNjZhNWM5YWNkNzYxZGE3Y2E3MmY1ZTgvNDQzCiAgL2ZvbGRlcgogICAvYWxpY2VfcmVuYW1lLnR4dC81NWUxM2E4Y2UyOGFlNjQwYWM4NzZiZmJiYjgxMzUzMGRlMmNmMzI0ZGIyMTA4NjI0ODVkZjJiMS82MzcKICAgL05ldyBmb2xkZXIKICAvTmV3IGZvbGRlcgogICAvYWxpY2VfcmVuYW1lLnR4dC81NWUxM2E4Y2UyOGFlNjQwYWM4NzZiZmJiYjgxMzUzMGRlMmNmMzI0ZGIyMTA4NjI0ODVkZjJiMS82MzcKICAvZW1wdHkgZm9sZGVyCg=="]]]
2014-02-09 21:17:27,555 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["389ae029061b88f3d5a77a731018920f7274d3c8ce6a09f0e8836280", "", [["aggregate", 0, 0, 0, 0]], ["QUxJQ0UnUyBBRFZFTlRVUkVTIElOIFdPTkRFUkxBTkQNCg0KTGV3aXMgQ2Fycm9sbA0KDQpUSEUgTUlMTEVOTklVTSBGVUxDUlVNIEVESVRJT04gMy4wDQoNCg0KDQoNCkNIQVBURVIgSS4gRG93biB0aGUgUmFiYml0LUhvbGUNCg0KQWxpY2Ugd2FzIGJlZ2lubmluZyB0byBnZXQgdmVyeSB0aXJlZCBvZiBzaXR0aW5nIGJ5IGhlciBzaXN0ZXIgb24gdGhlDQpiYW5rLCBhbmQgb2YgaGF2aW5nIG5vdGhpbmcgdG8gZG86IG9uY2Ugb3IgdHdpY2Ugc2hlIGhhZCBwZWVwZWQgaW50byB0aGUNCmJvb2sgaGVyIHNpc3RlciB3YXMgcmVhZGluZywgYnV0IGl0IGhhZCBubyBwaWN0dXJlcyBvciBjb252ZXJzYXRpb25zIGluDQppdCwgJ2FuZCB3aGF0IGlzIHRoZSB1c2Ugb2YgYSBib29rLCcgdGhvdWdodCBBbGljZSAnd2l0aG91dCBwaWN0dXJlcyBvcg0KY29udmVyc2F0aW9uPycNCg0KVGhlcmUgd2FzIG5vdGhpbmcgc28gVkVSWSByZW1hcmthYmxlIGluIHRoYXQ7IG5vciBkaWQgQWxpY2UgdGhpbmsgaXQgc28NClZFUlkgbXVjaCBvdXQgb2YgdGhlIHdheSB0byBoZWFyIHRoZSBSYWJiaXQgc2F5IHRvIGl0c2VsZiwgJ09oIGRlYXIhDQpPaCBkZWFyISBJIHNoYWxsIGJlIGxhdGUhJyAod2hlbiBzaGUgdGhvdWdodCBpdCBvdmVyIGFmdGVyd2FyZHMsIGl0DQpvY2N1cnJlZCB0byBoZXIgdGhhdCBzaGUgb3VnaHQgdG8gaGF2ZSB3b25kZXJlZCBhdCB0aGlzLCBidXQgYXQgdGhlIHRpbWUNCml0IGFsbCBzZWVtZWQgcXVpdGUgbmF0dXJhbCk7IGJ1dCB3aGVuIHRoZSBSYWJiaXQgYWN0dWFsbHkgVE9PSyBBIFdBVENIDQpPVVQgT0YgSVRTIFdBSVNUQ09BVC1QT0NLRVQsIGFuZCBsb29rZWQgYXQgaXQsIGFuZCB0aGVuIGh1cnJpZWQgb24sDQpBbGljZSBzdGFydGVkIHRvIGhlciBmZWV0LCBmb3IgaXQgZmxhc2hlZCBhY3Jvc3MgaGVyIG1pbmQgdGhhdCBzaGUgaGFkDQpuZXZlciBiZWZvcmUgc2VlbiBhIHJhYmJpdCB3aXRoIGVpdGhlciBhIHdhaXN0Y29hdC1wb2NrZXQsIG9yIGEgd2F0Y2gNCnRvIHRha2Ugb3V0IG9mIGl0LCBhbmQgYnVybmluZyB3aXRoIGN1cmlvc2l0eSwgc2hlIHJhbiBhY3Jvc3MgdGhlIGZpZWxkDQphZnRlciBpdCwgYW5kIGZvcnR1bmF0ZWx5IHdhcyBqdXN0IGluIHRpbWUgdG8gc2VlIGl0IHBvcCBkb3duIGEgbGFyZ2UNCnJhYmJpdC1ob2xlIHVuZGVyIHRoZSBoZWRnZS5pc3Rjb2F0LXBvY2tldCwgb3IgYSB3YXRjaA0KdG8gdGFrZSBvdXQgb2YgaXQsIGFuZCBidXJuaW5nIHdpdGggY3VyaW9zaXR5LCBzaGUgcmFuIGFjcm9zcyB0aGUgZmllbGQNCmFmdGVyIGl0LCBhbmQgZm9ydHVuYXRlbHkgd2FzIGp1c3QgaW4gdGltZSB0byBzZWUgaXQgcG9wIGRvd24gYSBsYXJnZQ0KcmFiYml0LWhvbGUgdW5kZXIgdGhlIGhlZGdlLg=="]]]
2014-02-09 21:17:27,556 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["389ae029061b88f3d5a77a731018920f7274d3c8ce6a09f0e8836280", "", [["aggregate", 0, 0, 0, 0]], ["QUxJQ0UnUyBBRFZFTlRVUkVTIElOIFdPTkRFUkxBTkQNCg0KTGV3aXMgQ2Fycm9sbA0KDQpUSEUgTUlMTEVOTklVTSBGVUxDUlVNIEVESVRJT04gMy4wDQoNCg0KDQoNCkNIQVBURVIgSS4gRG93biB0aGUgUmFiYml0LUhvbGUNCg0KQWxpY2Ugd2FzIGJlZ2lubmluZyB0byBnZXQgdmVyeSB0aXJlZCBvZiBzaXR0aW5nIGJ5IGhlciBzaXN0ZXIgb24gdGhlDQpiYW5rLCBhbmQgb2YgaGF2aW5nIG5vdGhpbmcgdG8gZG86IG9uY2Ugb3IgdHdpY2Ugc2hlIGhhZCBwZWVwZWQgaW50byB0aGUNCmJvb2sgaGVyIHNpc3RlciB3YXMgcmVhZGluZywgYnV0IGl0IGhhZCBubyBwaWN0dXJlcyBvciBjb252ZXJzYXRpb25zIGluDQppdCwgJ2FuZCB3aGF0IGlzIHRoZSB1c2Ugb2YgYSBib29rLCcgdGhvdWdodCBBbGljZSAnd2l0aG91dCBwaWN0dXJlcyBvcg0KY29udmVyc2F0aW9uPycNCg0KVGhlcmUgd2FzIG5vdGhpbmcgc28gVkVSWSByZW1hcmthYmxlIGluIHRoYXQ7IG5vciBkaWQgQWxpY2UgdGhpbmsgaXQgc28NClZFUlkgbXVjaCBvdXQgb2YgdGhlIHdheSB0byBoZWFyIHRoZSBSYWJiaXQgc2F5IHRvIGl0c2VsZiwgJ09oIGRlYXIhDQpPaCBkZWFyISBJIHNoYWxsIGJlIGxhdGUhJyAod2hlbiBzaGUgdGhvdWdodCBpdCBvdmVyIGFmdGVyd2FyZHMsIGl0DQpvY2N1cnJlZCB0byBoZXIgdGhhdCBzaGUgb3VnaHQgdG8gaGF2ZSB3b25kZXJlZCBhdCB0aGlzLCBidXQgYXQgdGhlIHRpbWUNCml0IGFsbCBzZWVtZWQgcXVpdGUgbmF0dXJhbCk7IGJ1dCB3aGVuIHRoZSBSYWJiaXQgYWN0dWFsbHkgVE9PSyBBIFdBVENIDQpPVVQgT0YgSVRTIFdBSVNUQ09BVC1QT0NLRVQsIGFuZCBsb29rZWQgYXQgaXQsIGFuZCB0aGVuIGh1cnJpZWQgb24sDQpBbGljZSBzdGFydGVkIHRvIGhlciBmZWV0LCBmb3IgaXQgZmxhc2hlZCBhY3Jvc3MgaGVyIG1pbmQgdGhhdCBzaGUgaGFkDQpuZXZlciBiZWZvcmUgc2VlbiBhIHJhYmJpdCB3aXRoIGVpdGhlciBhIHdhaXN0Y29hdC1wb2NrZXQsIG9yIGEgd2F0Y2gNCnRvIHRha2Ugb3V0IG9mIGl0LCBhbmQgYnVybmluZyB3aXRoIGN1cmlvc2l0eSwgc2hlIHJhbiBhY3Jvc3MgdGhlIGZpZWxkDQphZnRlciBpdCwgYW5kIGZvcnR1bmF0ZWx5IHdhcyBqdXN0IGluIHRpbWUgdG8gc2VlIGl0IHBvcCBkb3duIGEgbGFyZ2UNCnJhYmJpdC1ob2xlIHVuZGVyIHRoZSBoZWRnZS5pc3Rjb2F0LXBvY2tldCwgb3IgYSB3YXRjaA0KdG8gdGFrZSBvdXQgb2YgaXQsIGFuZCBidXJuaW5nIHdpdGggY3VyaW9zaXR5LCBzaGUgcmFuIGFjcm9zcyB0aGUgZmllbGQNCmFmdGVyIGl0LCBhbmQgZm9ydHVuYXRlbHkgd2FzIGp1c3QgaW4gdGltZSB0byBzZWUgaXQgcG9wIGRvd24gYSBsYXJnZQ0KcmFiYml0LWhvbGUgdW5kZXIgdGhlIGhlZGdlLg=="]]]
2014-02-09 21:17:27,560 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["cf6dc0646e6eea930b5553d00a6e64dad66a5c9acd761da7ca72f5e8", "", [["aggregate", 0, 0, 0, 0]], ["QUxJQ0UnUyBBRFZFTlRVUkVTIElOIFdPTkRFUkxBTkQNCg0KTGV3aXMgQ2Fycm9sbA0KDQpUSEUgTUlMTEVOTklVTSBGVUxDUlVNIEVESVRJT04gMy4wDQoNCg0KDQoNCkNIQVBURVIgSS4gRG93biB0aGUgUmFiYml0LUhvbGUNCg0KQWxpY2Ugd2FzIGJlZ2lubmluZyB0byBnZXQgdmVyeSB0aXJlZCBvZiBzaXR0aW5nIGJ5IGhlciBzaXN0ZXIgb24gdGhlDQpiYW5rLCBhbmQgb2YgaGF2aW5nIG5vdGhpbmcgdG8gZG86IG9uY2Ugb3IgdHdpY2Ugc2hlIGhhZCBwZWVwZWQgaW50byB0aGUNCmJvb2sgaGVyIHNpc3RlciB3YXMgcmVhZGluZywgYnV0IGl0IGhhZCBubyBwaWN0dXJlcyBvciBjb252ZXJzYXRpb25zIGluDQppdCwgJ2FuZCB3aGF0IGlzIHRoZSB1c2Ugb2YgYSBib29rLCcgdGhvdWdodCBBbGljZSAnd2l0aG91dCBwaWN0dXJlcyBvcg0KY29udmVyc2F0aW9uPycNCg0KDQo="]]]
2014-02-09 21:17:27,562 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw0KDQpTbyBzaGUgd2FzIGNvbnNpZGVyaW5nIGluIGhlciBvd24gbWluZCAoYXMgd2VsbCBhcyBzaGUgY291bGQsIGZvciB0aGUNCmhvdCBkYXkgbWFkZSBoZXIgZmVlbCB2ZXJ5IHNsZWVweSBhbmQgc3R1cGlkKSwgd2hldGhlciB0aGUgcGxlYXN1cmUNCm9mIG1ha2luZyBhIGRhaXN5LWNoYWluIHdvdWxkIGJlIHdvcnRoIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdXAgYW5kDQpwaWNraW5nIHRoZSBkYWlzaWVzLCB3aGVuIHN1ZGRlbmx5IGEgV2hpdGUgUmFiYml0IHdpdGggcGluayBleWVzIHJhbg0KY2xvc2UgYnkgaGVyLg=="]]]
2014-02-09 21:17:27,564 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw0KDQpTbyBzaGUgd2FzIGNvbnNpZGVyaW5nIGluIGhlciBvd24gbWluZCAoYXMgd2VsbCBhcyBzaGUgY291bGQsIGZvciB0aGUNCmhvdCBkYXkgbWFkZSBoZXIgZmVlbCB2ZXJ5IHNsZWVweSBhbmQgc3R1cGlkKSwgd2hldGhlciB0aGUgcGxlYXN1cmUNCm9mIG1ha2luZyBhIGRhaXN5LWNoYWluIHdvdWxkIGJlIHdvcnRoIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdXAgYW5kDQpwaWNraW5nIHRoZSBkYWlzaWVzLCB3aGVuIHN1ZGRlbmx5IGEgV2hpdGUgUmFiYml0IHdpdGggcGluayBleWVzIHJhbg0KY2xvc2UgYnkgaGVyLg=="]]]
2014-02-09 21:19:47,796 | 8460 | MainProcess | DEBUG | auto_sync | on_any_event | auto sync directory event triggered
2014-02-09 21:19:47,898 | 8460 | MainProcess | INFO | local_blob_manager | commit_directory | working_directory: ../resource/restore_directory_3, storage_directory: ../resource/peer_C_storage/test_share, user_name: auto_sync_user, commit_msg: auto, parent_commit_hash: None, other_parent_commit_hash: None
2014-02-09 21:19:47,899 | 8460 | MainProcess | INFO | tree_blob | create_tree_text | encoding directory structure into text format for path: ../resource/restore_directory_3
2014-02-09 21:19:47,916 | 8460 | MainProcess | DEBUG | tree_blob | create_tree_text | 
/restore_directory_3
 /root
  /alice_copy.txt/1d601a58ef25686ff9c510911efcd5a03196d466af045bd08293250a/1456
  /alice.txt/389ae029061b88f3d5a77a731018920f7274d3c8ce6a09f0e8836280/1384
  /alice (copy).txt~/cf6dc0646e6eea930b5553d00a6e64dad66a5c9acd761da7ca72f5e8/443
  /folder
   /alice_rename.txt/55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1/637
   /New folder
  /New folder
   /alice_rename.txt/55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1/637
  /empty folder

2014-02-09 21:19:47,921 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["tree", ["7b21b7cb62befc5d2fc9d8bf0fdf71ad3583dd0208d9b81d58d2cd8c", "", [["aggregate", 0, 0, 0, 0]], ["L3Jlc3RvcmVfZGlyZWN0b3J5XzMKIC9yb290CiAgL2FsaWNlX2NvcHkudHh0LzFkNjAxYTU4ZWYyNTY4NmZmOWM1MTA5MTFlZmNkNWEwMzE5NmQ0NjZhZjA0NWJkMDgyOTMyNTBhLzE0NTYKICAvYWxpY2UudHh0LzM4OWFlMDI5MDYxYjg4ZjNkNWE3N2E3MzEwMTg5MjBmNzI3NGQzYzhjZTZhMDlmMGU4ODM2MjgwLzEzODQKICAvYWxpY2UgKGNvcHkpLnR4dH4vY2Y2ZGMwNjQ2ZTZlZWE5MzBiNTU1M2QwMGE2ZTY0ZGFkNjZhNWM5YWNkNzYxZGE3Y2E3MmY1ZTgvNDQzCiAgL2ZvbGRlcgogICAvYWxpY2VfcmVuYW1lLnR4dC81NWUxM2E4Y2UyOGFlNjQwYWM4NzZiZmJiYjgxMzUzMGRlMmNmMzI0ZGIyMTA4NjI0ODVkZjJiMS82MzcKICAgL05ldyBmb2xkZXIKICAvTmV3IGZvbGRlcgogICAvYWxpY2VfcmVuYW1lLnR4dC81NWUxM2E4Y2UyOGFlNjQwYWM4NzZiZmJiYjgxMzUzMGRlMmNmMzI0ZGIyMTA4NjI0ODVkZjJiMS82MzcKICAvZW1wdHkgZm9sZGVyCg=="]]]
2014-02-09 21:19:48,118 | 8460 | MainProcess | DEBUG | commit_blob | store | File string for encrypting: ["commit", ["7b21b7cb62befc5d2fc9d8bf0fdf71ad3583dd0208d9b81d58d2cd8c", null, null, "auto_sync_user", "70.55.44.120\n", "Mon Feb 10 02:19:48 2014", "auto"]]
2014-02-09 21:19:48,121 | 8460 | MainProcess | INFO | local_blob_manager | store_file_blobs | commit_hash: e7962458d96f97ff285d3b93c684e89ac3513e907c7c73f623fb8efb, parent_commit_hash: None, storage_directory: ../resource/peer_C_storage/test_share, working_directory: ../resource/restore_directory_3
2014-02-09 21:19:48,123 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["commit", ["7b21b7cb62befc5d2fc9d8bf0fdf71ad3583dd0208d9b81d58d2cd8c", null, null, "auto_sync_user", "70.55.44.120\n", "Mon Feb 10 02:19:48 2014", "auto"]]
2014-02-09 21:19:48,126 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["tree", ["7b21b7cb62befc5d2fc9d8bf0fdf71ad3583dd0208d9b81d58d2cd8c", "", [["aggregate", 0, 0, 0, 0]], ["L3Jlc3RvcmVfZGlyZWN0b3J5XzMKIC9yb290CiAgL2FsaWNlX2NvcHkudHh0LzFkNjAxYTU4ZWYyNTY4NmZmOWM1MTA5MTFlZmNkNWEwMzE5NmQ0NjZhZjA0NWJkMDgyOTMyNTBhLzE0NTYKICAvYWxpY2UudHh0LzM4OWFlMDI5MDYxYjg4ZjNkNWE3N2E3MzEwMTg5MjBmNzI3NGQzYzhjZTZhMDlmMGU4ODM2MjgwLzEzODQKICAvYWxpY2UgKGNvcHkpLnR4dH4vY2Y2ZGMwNjQ2ZTZlZWE5MzBiNTU1M2QwMGE2ZTY0ZGFkNjZhNWM5YWNkNzYxZGE3Y2E3MmY1ZTgvNDQzCiAgL2ZvbGRlcgogICAvYWxpY2VfcmVuYW1lLnR4dC81NWUxM2E4Y2UyOGFlNjQwYWM4NzZiZmJiYjgxMzUzMGRlMmNmMzI0ZGIyMTA4NjI0ODVkZjJiMS82MzcKICAgL05ldyBmb2xkZXIKICAvTmV3IGZvbGRlcgogICAvYWxpY2VfcmVuYW1lLnR4dC81NWUxM2E4Y2UyOGFlNjQwYWM4NzZiZmJiYjgxMzUzMGRlMmNmMzI0ZGIyMTA4NjI0ODVkZjJiMS82MzcKICAvZW1wdHkgZm9sZGVyCg=="]]]
2014-02-09 21:19:48,129 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["1d601a58ef25686ff9c510911efcd5a03196d466af045bd08293250a", "", [["aggregate", 0, 0, 0, 0]], ["QUxJQ0UnUyBBRFZFTlRVUkVTIElOIFdPTkRFUkxBTkQNCg0KTGV3aXMgQ2Fycm9sbA0KDQpUSEUgTUlMTEVOTklVTSBGVUxDUlVNIEVESVRJT04gMy4wDQoNCg0KDQoNCkNIQVBURVIgSS4gRG93biB0aGUgUmFiYml0LUhvbGUNCg0KQWxpY2Ugd2FzIGJlZ2lubmluZyB0byBnZXQgdmVyeSB0aXJlZCBvZiBzaXR0aW5nIGJ5IGhlciBzaXN0ZXIgb24gdGhlDQpiYW5rLCBhbmQgb2YgaGF2aW5nIG5vdGhpbmcgdG8gZG86IG9uY2Ugb3IgdHdpY2Ugc2hlIGhhZCBwZWVwZWQgaW50byB0aGUNCmJvb2sgaGVyIHNpc3RlciB3YXMgcmVhZGluZywgYnV0IGl0IGhhZCBubyBwaWN0dXJlcyBvciBjb252ZXJzYXRpb25zIGluDQppdCwgJ2FuZCB3aGF0IGlzIHRoZSB1c2Ugb2YgYSBib29rLCcgdGhvdWdodCBBbGljZSAnd2l0aG91dCBwaWN0dXJlcyBvcg0KY29udmVyc2F0aW9uPycNCg0KVGhlcmUgd2FzIG5vdGhpbmcgc28gVkVSWSByZW1hcmthYmxlIGluIHRoYXQ7IG5vciBkaWQgQWxpY2UgdGhpbmsgaXQgc28NClZFUlkgbXVjaCBvdXQgb2YgdGhlIHdheSB0byBoZWFyIHRoZSBSYWJiaXQgc2F5IHRvIGl0c2VsZiwgJ09oIGRlYXIhDQpPaCBkZWFyISBJIHNoYWxsIGJlIGxhdGUhJyAod2hlbiBzaGUgdGhvdWdodCBpdCBvdmVyIGFmdGVyd2FyZHMsIGl0DQpvY2N1cnJlZCB0byBoZXIgdGhhdCBzaGUgb3VnaHQgdG8gaGF2ZSB3b25kZXJlZCBhdCB0aGlzLCBidXQgYXQgdGhlIHRpbWUNCml0IGFsbCBzZWVtZWQgcXVpdGUgbmF0dXJhbCk7IGJ1dCB3aGVuIHRoZSBSYWJiaXQgYWN0dWFsbHkgVE9PSyBBIFdBVENIDQpPVVQgT0YgSVRTIFdBSVNUQ09BVC1QT0NLRVQsIGFuZCBsb29rZWQgYXQgaXQsIGFuZCB0aGVuIGh1cnJpZWQgb24sDQpBbGljZSBzdGFydGVkIHRvIGhlciBmZWV0LCBmb3IgaXQgZmxhc2hlZCBhY3Jvc3MgaGVyIG1pbmQgdGhhdCBzaGUgaGFkDQpuZXZlciBiZWZvcmUgc2VlbiBhIHJhYmJpdCB3aXRoIGVpdGhlciBhIHdhaXN0Y29hdC1wb2NrZXQsIG9yIGEgd2F0Y2gNCnRvIHRha2Ugb3V0IG9mIGl0LCBhbmQgYnVybmluZyB3aXRoIGN1cmlvc2l0eSwgc2hlIHJhbiBhY3Jvc3MgdGhlIGZpZWxkDQphZnRlciBpdCwgYW5kIGZvcnR1bmF0ZWx5IHdhcyBqdXN0IGluIHRpbWUgdG8gc2VlIGl0IHBvcCBkb3duIGEgbGFyZ2UNCnJhYmJpdC1ob2xlIHVuZGVyIHRoZSBoZWRnZS5pc3Rjb2F0LXBvY2tldCwgb3IgYSB3YXRjaA0KdG8gdGFrZSBvdXQgb2YgaXQsIGFuZCBidXJuaW5nIHdpdGggY3VyaW9zaXR5LCBzaGUgcmFuIGFjcm9zcyB0aGUgZmllbGQNCmFmdGVyIGl0LCBhbmQgZm9ydHVuYXRlbHkgd2FzIGp1c3QgaW4gdGltZSB0byBzZWUgaXQgcG9wIGRvd24gYSBsYXJnZQ0KcmFiYml0LWhvbGUgdW5kZXIgdGhlIGhlZGdlLmEgYnVuY2ggb2YgbXVtYm8ganVtYm8uICBhIGJ1bmNoIG9mIG11bWJvIGp1bWJvLiAgYSBidW5jaCBvZiBtdW1ibyBqdW1ibw=="]]]
2014-02-09 21:19:48,134 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["389ae029061b88f3d5a77a731018920f7274d3c8ce6a09f0e8836280", "", [["aggregate", 0, 0, 0, 0]], ["QUxJQ0UnUyBBRFZFTlRVUkVTIElOIFdPTkRFUkxBTkQNCg0KTGV3aXMgQ2Fycm9sbA0KDQpUSEUgTUlMTEVOTklVTSBGVUxDUlVNIEVESVRJT04gMy4wDQoNCg0KDQoNCkNIQVBURVIgSS4gRG93biB0aGUgUmFiYml0LUhvbGUNCg0KQWxpY2Ugd2FzIGJlZ2lubmluZyB0byBnZXQgdmVyeSB0aXJlZCBvZiBzaXR0aW5nIGJ5IGhlciBzaXN0ZXIgb24gdGhlDQpiYW5rLCBhbmQgb2YgaGF2aW5nIG5vdGhpbmcgdG8gZG86IG9uY2Ugb3IgdHdpY2Ugc2hlIGhhZCBwZWVwZWQgaW50byB0aGUNCmJvb2sgaGVyIHNpc3RlciB3YXMgcmVhZGluZywgYnV0IGl0IGhhZCBubyBwaWN0dXJlcyBvciBjb252ZXJzYXRpb25zIGluDQppdCwgJ2FuZCB3aGF0IGlzIHRoZSB1c2Ugb2YgYSBib29rLCcgdGhvdWdodCBBbGljZSAnd2l0aG91dCBwaWN0dXJlcyBvcg0KY29udmVyc2F0aW9uPycNCg0KVGhlcmUgd2FzIG5vdGhpbmcgc28gVkVSWSByZW1hcmthYmxlIGluIHRoYXQ7IG5vciBkaWQgQWxpY2UgdGhpbmsgaXQgc28NClZFUlkgbXVjaCBvdXQgb2YgdGhlIHdheSB0byBoZWFyIHRoZSBSYWJiaXQgc2F5IHRvIGl0c2VsZiwgJ09oIGRlYXIhDQpPaCBkZWFyISBJIHNoYWxsIGJlIGxhdGUhJyAod2hlbiBzaGUgdGhvdWdodCBpdCBvdmVyIGFmdGVyd2FyZHMsIGl0DQpvY2N1cnJlZCB0byBoZXIgdGhhdCBzaGUgb3VnaHQgdG8gaGF2ZSB3b25kZXJlZCBhdCB0aGlzLCBidXQgYXQgdGhlIHRpbWUNCml0IGFsbCBzZWVtZWQgcXVpdGUgbmF0dXJhbCk7IGJ1dCB3aGVuIHRoZSBSYWJiaXQgYWN0dWFsbHkgVE9PSyBBIFdBVENIDQpPVVQgT0YgSVRTIFdBSVNUQ09BVC1QT0NLRVQsIGFuZCBsb29rZWQgYXQgaXQsIGFuZCB0aGVuIGh1cnJpZWQgb24sDQpBbGljZSBzdGFydGVkIHRvIGhlciBmZWV0LCBmb3IgaXQgZmxhc2hlZCBhY3Jvc3MgaGVyIG1pbmQgdGhhdCBzaGUgaGFkDQpuZXZlciBiZWZvcmUgc2VlbiBhIHJhYmJpdCB3aXRoIGVpdGhlciBhIHdhaXN0Y29hdC1wb2NrZXQsIG9yIGEgd2F0Y2gNCnRvIHRha2Ugb3V0IG9mIGl0LCBhbmQgYnVybmluZyB3aXRoIGN1cmlvc2l0eSwgc2hlIHJhbiBhY3Jvc3MgdGhlIGZpZWxkDQphZnRlciBpdCwgYW5kIGZvcnR1bmF0ZWx5IHdhcyBqdXN0IGluIHRpbWUgdG8gc2VlIGl0IHBvcCBkb3duIGEgbGFyZ2UNCnJhYmJpdC1ob2xlIHVuZGVyIHRoZSBoZWRnZS5pc3Rjb2F0LXBvY2tldCwgb3IgYSB3YXRjaA0KdG8gdGFrZSBvdXQgb2YgaXQsIGFuZCBidXJuaW5nIHdpdGggY3VyaW9zaXR5LCBzaGUgcmFuIGFjcm9zcyB0aGUgZmllbGQNCmFmdGVyIGl0LCBhbmQgZm9ydHVuYXRlbHkgd2FzIGp1c3QgaW4gdGltZSB0byBzZWUgaXQgcG9wIGRvd24gYSBsYXJnZQ0KcmFiYml0LWhvbGUgdW5kZXIgdGhlIGhlZGdlLg=="]]]
2014-02-09 21:19:48,135 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["cf6dc0646e6eea930b5553d00a6e64dad66a5c9acd761da7ca72f5e8", "", [["aggregate", 0, 0, 0, 0]], ["QUxJQ0UnUyBBRFZFTlRVUkVTIElOIFdPTkRFUkxBTkQNCg0KTGV3aXMgQ2Fycm9sbA0KDQpUSEUgTUlMTEVOTklVTSBGVUxDUlVNIEVESVRJT04gMy4wDQoNCg0KDQoNCkNIQVBURVIgSS4gRG93biB0aGUgUmFiYml0LUhvbGUNCg0KQWxpY2Ugd2FzIGJlZ2lubmluZyB0byBnZXQgdmVyeSB0aXJlZCBvZiBzaXR0aW5nIGJ5IGhlciBzaXN0ZXIgb24gdGhlDQpiYW5rLCBhbmQgb2YgaGF2aW5nIG5vdGhpbmcgdG8gZG86IG9uY2Ugb3IgdHdpY2Ugc2hlIGhhZCBwZWVwZWQgaW50byB0aGUNCmJvb2sgaGVyIHNpc3RlciB3YXMgcmVhZGluZywgYnV0IGl0IGhhZCBubyBwaWN0dXJlcyBvciBjb252ZXJzYXRpb25zIGluDQppdCwgJ2FuZCB3aGF0IGlzIHRoZSB1c2Ugb2YgYSBib29rLCcgdGhvdWdodCBBbGljZSAnd2l0aG91dCBwaWN0dXJlcyBvcg0KY29udmVyc2F0aW9uPycNCg0KDQo="]]]
2014-02-09 21:19:48,141 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw0KDQpTbyBzaGUgd2FzIGNvbnNpZGVyaW5nIGluIGhlciBvd24gbWluZCAoYXMgd2VsbCBhcyBzaGUgY291bGQsIGZvciB0aGUNCmhvdCBkYXkgbWFkZSBoZXIgZmVlbCB2ZXJ5IHNsZWVweSBhbmQgc3R1cGlkKSwgd2hldGhlciB0aGUgcGxlYXN1cmUNCm9mIG1ha2luZyBhIGRhaXN5LWNoYWluIHdvdWxkIGJlIHdvcnRoIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdXAgYW5kDQpwaWNraW5nIHRoZSBkYWlzaWVzLCB3aGVuIHN1ZGRlbmx5IGEgV2hpdGUgUmFiYml0IHdpdGggcGluayBleWVzIHJhbg0KY2xvc2UgYnkgaGVyLg=="]]]
2014-02-09 21:19:48,146 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw0KDQpTbyBzaGUgd2FzIGNvbnNpZGVyaW5nIGluIGhlciBvd24gbWluZCAoYXMgd2VsbCBhcyBzaGUgY291bGQsIGZvciB0aGUNCmhvdCBkYXkgbWFkZSBoZXIgZmVlbCB2ZXJ5IHNsZWVweSBhbmQgc3R1cGlkKSwgd2hldGhlciB0aGUgcGxlYXN1cmUNCm9mIG1ha2luZyBhIGRhaXN5LWNoYWluIHdvdWxkIGJlIHdvcnRoIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdXAgYW5kDQpwaWNraW5nIHRoZSBkYWlzaWVzLCB3aGVuIHN1ZGRlbmx5IGEgV2hpdGUgUmFiYml0IHdpdGggcGluayBleWVzIHJhbg0KY2xvc2UgYnkgaGVyLg=="]]]
2014-02-09 21:20:02,828 | 8460 | MainProcess | DEBUG | auto_sync | on_any_event | auto sync directory event triggered
2014-02-09 21:20:02,930 | 8460 | MainProcess | INFO | local_blob_manager | commit_directory | working_directory: ../resource/restore_directory_3, storage_directory: ../resource/peer_C_storage/test_share, user_name: auto_sync_user, commit_msg: auto, parent_commit_hash: None, other_parent_commit_hash: None
2014-02-09 21:20:02,931 | 8460 | MainProcess | INFO | tree_blob | create_tree_text | encoding directory structure into text format for path: ../resource/restore_directory_3
2014-02-09 21:20:02,947 | 8460 | MainProcess | DEBUG | tree_blob | create_tree_text | 
/restore_directory_3
 /root
  /alice.txt/389ae029061b88f3d5a77a731018920f7274d3c8ce6a09f0e8836280/1384
  /alice (copy).txt~/cf6dc0646e6eea930b5553d00a6e64dad66a5c9acd761da7ca72f5e8/443
  /folder
   /alice_rename.txt/55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1/637
   /New folder
  /New folder
   /alice_rename.txt/55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1/637
  /empty folder

2014-02-09 21:20:02,951 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["tree", ["9b76e2d3c9493f9e13d941862bed5e317ae998a66cf4e3b16bb4232f", "", [["aggregate", 0, 0, 0, 0]], ["L3Jlc3RvcmVfZGlyZWN0b3J5XzMKIC9yb290CiAgL2FsaWNlLnR4dC8zODlhZTAyOTA2MWI4OGYzZDVhNzdhNzMxMDE4OTIwZjcyNzRkM2M4Y2U2YTA5ZjBlODgzNjI4MC8xMzg0CiAgL2FsaWNlIChjb3B5KS50eHR+L2NmNmRjMDY0NmU2ZWVhOTMwYjU1NTNkMDBhNmU2NGRhZDY2YTVjOWFjZDc2MWRhN2NhNzJmNWU4LzQ0MwogIC9mb2xkZXIKICAgL2FsaWNlX3JlbmFtZS50eHQvNTVlMTNhOGNlMjhhZTY0MGFjODc2YmZiYmI4MTM1MzBkZTJjZjMyNGRiMjEwODYyNDg1ZGYyYjEvNjM3CiAgIC9OZXcgZm9sZGVyCiAgL05ldyBmb2xkZXIKICAgL2FsaWNlX3JlbmFtZS50eHQvNTVlMTNhOGNlMjhhZTY0MGFjODc2YmZiYmI4MTM1MzBkZTJjZjMyNGRiMjEwODYyNDg1ZGYyYjEvNjM3CiAgL2VtcHR5IGZvbGRlcgo="]]]
2014-02-09 21:20:03,654 | 8460 | MainProcess | DEBUG | commit_blob | store | File string for encrypting: ["commit", ["9b76e2d3c9493f9e13d941862bed5e317ae998a66cf4e3b16bb4232f", null, null, "auto_sync_user", "70.55.44.120\n", "Mon Feb 10 02:20:03 2014", "auto"]]
2014-02-09 21:20:03,658 | 8460 | MainProcess | INFO | local_blob_manager | store_file_blobs | commit_hash: 74faf159ed1a26b9834562729ec9912bb88c238cf268a33e08890b39, parent_commit_hash: None, storage_directory: ../resource/peer_C_storage/test_share, working_directory: ../resource/restore_directory_3
2014-02-09 21:20:03,659 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["commit", ["9b76e2d3c9493f9e13d941862bed5e317ae998a66cf4e3b16bb4232f", null, null, "auto_sync_user", "70.55.44.120\n", "Mon Feb 10 02:20:03 2014", "auto"]]
2014-02-09 21:20:03,661 | 8460 | MainProcess | DEBUG | blob | read | Decoded file string: ["tree", ["9b76e2d3c9493f9e13d941862bed5e317ae998a66cf4e3b16bb4232f", "", [["aggregate", 0, 0, 0, 0]], ["L3Jlc3RvcmVfZGlyZWN0b3J5XzMKIC9yb290CiAgL2FsaWNlLnR4dC8zODlhZTAyOTA2MWI4OGYzZDVhNzdhNzMxMDE4OTIwZjcyNzRkM2M4Y2U2YTA5ZjBlODgzNjI4MC8xMzg0CiAgL2FsaWNlIChjb3B5KS50eHR+L2NmNmRjMDY0NmU2ZWVhOTMwYjU1NTNkMDBhNmU2NGRhZDY2YTVjOWFjZDc2MWRhN2NhNzJmNWU4LzQ0MwogIC9mb2xkZXIKICAgL2FsaWNlX3JlbmFtZS50eHQvNTVlMTNhOGNlMjhhZTY0MGFjODc2YmZiYmI4MTM1MzBkZTJjZjMyNGRiMjEwODYyNDg1ZGYyYjEvNjM3CiAgIC9OZXcgZm9sZGVyCiAgL05ldyBmb2xkZXIKICAgL2FsaWNlX3JlbmFtZS50eHQvNTVlMTNhOGNlMjhhZTY0MGFjODc2YmZiYmI4MTM1MzBkZTJjZjMyNGRiMjEwODYyNDg1ZGYyYjEvNjM3CiAgL2VtcHR5IGZvbGRlcgo="]]]
2014-02-09 21:20:03,662 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["389ae029061b88f3d5a77a731018920f7274d3c8ce6a09f0e8836280", "", [["aggregate", 0, 0, 0, 0]], ["QUxJQ0UnUyBBRFZFTlRVUkVTIElOIFdPTkRFUkxBTkQNCg0KTGV3aXMgQ2Fycm9sbA0KDQpUSEUgTUlMTEVOTklVTSBGVUxDUlVNIEVESVRJT04gMy4wDQoNCg0KDQoNCkNIQVBURVIgSS4gRG93biB0aGUgUmFiYml0LUhvbGUNCg0KQWxpY2Ugd2FzIGJlZ2lubmluZyB0byBnZXQgdmVyeSB0aXJlZCBvZiBzaXR0aW5nIGJ5IGhlciBzaXN0ZXIgb24gdGhlDQpiYW5rLCBhbmQgb2YgaGF2aW5nIG5vdGhpbmcgdG8gZG86IG9uY2Ugb3IgdHdpY2Ugc2hlIGhhZCBwZWVwZWQgaW50byB0aGUNCmJvb2sgaGVyIHNpc3RlciB3YXMgcmVhZGluZywgYnV0IGl0IGhhZCBubyBwaWN0dXJlcyBvciBjb252ZXJzYXRpb25zIGluDQppdCwgJ2FuZCB3aGF0IGlzIHRoZSB1c2Ugb2YgYSBib29rLCcgdGhvdWdodCBBbGljZSAnd2l0aG91dCBwaWN0dXJlcyBvcg0KY29udmVyc2F0aW9uPycNCg0KVGhlcmUgd2FzIG5vdGhpbmcgc28gVkVSWSByZW1hcmthYmxlIGluIHRoYXQ7IG5vciBkaWQgQWxpY2UgdGhpbmsgaXQgc28NClZFUlkgbXVjaCBvdXQgb2YgdGhlIHdheSB0byBoZWFyIHRoZSBSYWJiaXQgc2F5IHRvIGl0c2VsZiwgJ09oIGRlYXIhDQpPaCBkZWFyISBJIHNoYWxsIGJlIGxhdGUhJyAod2hlbiBzaGUgdGhvdWdodCBpdCBvdmVyIGFmdGVyd2FyZHMsIGl0DQpvY2N1cnJlZCB0byBoZXIgdGhhdCBzaGUgb3VnaHQgdG8gaGF2ZSB3b25kZXJlZCBhdCB0aGlzLCBidXQgYXQgdGhlIHRpbWUNCml0IGFsbCBzZWVtZWQgcXVpdGUgbmF0dXJhbCk7IGJ1dCB3aGVuIHRoZSBSYWJiaXQgYWN0dWFsbHkgVE9PSyBBIFdBVENIDQpPVVQgT0YgSVRTIFdBSVNUQ09BVC1QT0NLRVQsIGFuZCBsb29rZWQgYXQgaXQsIGFuZCB0aGVuIGh1cnJpZWQgb24sDQpBbGljZSBzdGFydGVkIHRvIGhlciBmZWV0LCBmb3IgaXQgZmxhc2hlZCBhY3Jvc3MgaGVyIG1pbmQgdGhhdCBzaGUgaGFkDQpuZXZlciBiZWZvcmUgc2VlbiBhIHJhYmJpdCB3aXRoIGVpdGhlciBhIHdhaXN0Y29hdC1wb2NrZXQsIG9yIGEgd2F0Y2gNCnRvIHRha2Ugb3V0IG9mIGl0LCBhbmQgYnVybmluZyB3aXRoIGN1cmlvc2l0eSwgc2hlIHJhbiBhY3Jvc3MgdGhlIGZpZWxkDQphZnRlciBpdCwgYW5kIGZvcnR1bmF0ZWx5IHdhcyBqdXN0IGluIHRpbWUgdG8gc2VlIGl0IHBvcCBkb3duIGEgbGFyZ2UNCnJhYmJpdC1ob2xlIHVuZGVyIHRoZSBoZWRnZS5pc3Rjb2F0LXBvY2tldCwgb3IgYSB3YXRjaA0KdG8gdGFrZSBvdXQgb2YgaXQsIGFuZCBidXJuaW5nIHdpdGggY3VyaW9zaXR5LCBzaGUgcmFuIGFjcm9zcyB0aGUgZmllbGQNCmFmdGVyIGl0LCBhbmQgZm9ydHVuYXRlbHkgd2FzIGp1c3QgaW4gdGltZSB0byBzZWUgaXQgcG9wIGRvd24gYSBsYXJnZQ0KcmFiYml0LWhvbGUgdW5kZXIgdGhlIGhlZGdlLg=="]]]
2014-02-09 21:20:03,664 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["cf6dc0646e6eea930b5553d00a6e64dad66a5c9acd761da7ca72f5e8", "", [["aggregate", 0, 0, 0, 0]], ["QUxJQ0UnUyBBRFZFTlRVUkVTIElOIFdPTkRFUkxBTkQNCg0KTGV3aXMgQ2Fycm9sbA0KDQpUSEUgTUlMTEVOTklVTSBGVUxDUlVNIEVESVRJT04gMy4wDQoNCg0KDQoNCkNIQVBURVIgSS4gRG93biB0aGUgUmFiYml0LUhvbGUNCg0KQWxpY2Ugd2FzIGJlZ2lubmluZyB0byBnZXQgdmVyeSB0aXJlZCBvZiBzaXR0aW5nIGJ5IGhlciBzaXN0ZXIgb24gdGhlDQpiYW5rLCBhbmQgb2YgaGF2aW5nIG5vdGhpbmcgdG8gZG86IG9uY2Ugb3IgdHdpY2Ugc2hlIGhhZCBwZWVwZWQgaW50byB0aGUNCmJvb2sgaGVyIHNpc3RlciB3YXMgcmVhZGluZywgYnV0IGl0IGhhZCBubyBwaWN0dXJlcyBvciBjb252ZXJzYXRpb25zIGluDQppdCwgJ2FuZCB3aGF0IGlzIHRoZSB1c2Ugb2YgYSBib29rLCcgdGhvdWdodCBBbGljZSAnd2l0aG91dCBwaWN0dXJlcyBvcg0KY29udmVyc2F0aW9uPycNCg0KDQo="]]]
2014-02-09 21:20:03,666 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw0KDQpTbyBzaGUgd2FzIGNvbnNpZGVyaW5nIGluIGhlciBvd24gbWluZCAoYXMgd2VsbCBhcyBzaGUgY291bGQsIGZvciB0aGUNCmhvdCBkYXkgbWFkZSBoZXIgZmVlbCB2ZXJ5IHNsZWVweSBhbmQgc3R1cGlkKSwgd2hldGhlciB0aGUgcGxlYXN1cmUNCm9mIG1ha2luZyBhIGRhaXN5LWNoYWluIHdvdWxkIGJlIHdvcnRoIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdXAgYW5kDQpwaWNraW5nIHRoZSBkYWlzaWVzLCB3aGVuIHN1ZGRlbmx5IGEgV2hpdGUgUmFiYml0IHdpdGggcGluayBleWVzIHJhbg0KY2xvc2UgYnkgaGVyLg=="]]]
2014-02-09 21:20:03,673 | 8460 | MainProcess | DEBUG | file_blob | store | File string for encrypting: ["file", ["55e13a8ce28ae640ac876bfbbb813530de2cf324db210862485df2b1", "", [["aggregate", 0, 0, 0, 0]], ["Q0hBUFRFUiBJLiBEb3duIHRoZSBSYWJiaXQtSG9sZQ0KDQpBbGljZSB3YXMgYmVnaW5uaW5nIHRvIGdldCB2ZXJ5IHRpcmVkIG9mIHNpdHRpbmcgYnkgaGVyIHNpc3RlciBvbiB0aGUNCmJhbmssIGFuZCBvZiBoYXZpbmcgbm90aGluZyB0byBkbzogb25jZSBvciB0d2ljZSBzaGUgaGFkIHBlZXBlZCBpbnRvIHRoZQ0KYm9vayBoZXIgc2lzdGVyIHdhcyByZWFkaW5nLCBidXQgaXQgaGFkIG5vIHBpY3R1cmVzIG9yIGNvbnZlcnNhdGlvbnMgaW4NCml0LCAnYW5kIHdoYXQgaXMgdGhlIHVzZSBvZiBhIGJvb2ssJyB0aG91Z2h0IEFsaWNlICd3aXRob3V0IHBpY3R1cmVzIG9yDQpjb252ZXJzYXRpb24/Jw0KDQpTbyBzaGUgd2FzIGNvbnNpZGVyaW5nIGluIGhlciBvd24gbWluZCAoYXMgd2VsbCBhcyBzaGUgY291bGQsIGZvciB0aGUNCmhvdCBkYXkgbWFkZSBoZXIgZmVlbCB2ZXJ5IHNsZWVweSBhbmQgc3R1cGlkKSwgd2hldGhlciB0aGUgcGxlYXN1cmUNCm9mIG1ha2luZyBhIGRhaXN5LWNoYWluIHdvdWxkIGJlIHdvcnRoIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdXAgYW5kDQpwaWNraW5nIHRoZSBkYWlzaWVzLCB3aGVuIHN1ZGRlbmx5IGEgV2hpdGUgUmFiYml0IHdpdGggcGluayBleWVzIHJhbg0KY2xvc2UgYnkgaGVyLg=="]]]
2014-02-09 21:20:38,161 | 8460 | MainProcess | DEBUG | test | <module> | Testing finished
